{"kind":"FETCH","data":{"headers":{"accept-ranges":"bytes","access-control-allow-origin":"*","access-control-expose-headers":"X-Moose","cache-control":"private, s-maxage=0, max-age=0, must-revalidate, no-store","connection":"keep-alive","content-encoding":"gzip","content-length":"6112","content-type":"application/json; charset=UTF-8","date":"Sat, 17 May 2025 08:00:08 GMT","expires":"-1","nel":"{\"report_to\": \"w3-reporting-nel\", \"max_age\": 14400, \"include_subdomains\": false, \"success_fraction\": 1.0, \"failure_fraction\": 1.0}","report-to":"{\"group\": \"w3-reporting-nel\", \"max_age\": 14400, \"include_subdomains\": true,  \"endpoints\": [{ \"url\": \"https://w3-reporting-nel.reddit.com/reports\" }]}, {\"group\": \"w3-reporting\", \"max_age\": 14400, \"include_subdomains\": true, \"endpoints\": [{ \"url\": \"https://w3-reporting.reddit.com/reports\" }]}, {\"group\": \"w3-reporting-csp\", \"max_age\": 14400, \"include_subdomains\": true, \"endpoints\": [{ \"url\": \"https://w3-reporting-csp.reddit.com/reports\" }]}","server":"snooserv","set-cookie":"edgebucket=ZEwQ5em3Yt72GvAL2b; Domain=reddit.com; Max-Age=63071999; Path=/;  secure","strict-transport-security":"max-age=31536000; includeSubdomains","vary":"accept-encoding","via":"1.1 varnish","x-content-type-options":"nosniff","x-frame-options":"SAMEORIGIN","x-ratelimit-remaining":"98.0","x-ratelimit-reset":"591","x-ratelimit-used":"2","x-ua-compatible":"IE=edge","x-xss-protection":"1; mode=block"},"body":"eyJraW5kIjogIkxpc3RpbmciLCAiZGF0YSI6IHsiYWZ0ZXIiOiAidDNfMWtvam5xeCIsICJkaXN0IjogNywgIm1vZGhhc2giOiAiIiwgImdlb19maWx0ZXIiOiBudWxsLCAiY2hpbGRyZW4iOiBbeyJraW5kIjogInQzIiwgImRhdGEiOiB7ImFwcHJvdmVkX2F0X3V0YyI6IG51bGwsICJzdWJyZWRkaXQiOiAiRW50cmVwcmVuZXVyIiwgInNlbGZ0ZXh0IjogIk5lZWQgaGVscCB3aXRoIHlvdXIgd2Vic2l0ZSBvciBwb3J0Zm9saW8/IFdhbnQgYWR2aWNlIGZyb20gb3RoZXIgZW50cmVwcmVuZXVycyBvbiB3aGF0IHlvdSBjb3VsZCBpbXByb3ZlP1xuXG5TaGFyZSB5b3VyIHN0dWZmIGhlcmUgYW5kIGdldCBmZWVkYmFjayBmcm9tIG91ciBjb21tdW5pdHkuIFxuXG5TaW5jZSB0aGlzIHRocmVhZCBjYW4gZmlsbCB1cCBxdWlja2x5LCBjb25zaWRlciBzb3J0aW5nIHRoZSBjb21tZW50cyBieSBcIm5ld1wiIChpbnN0ZWFkIG9mIFwiYmVzdFwiIG9yIFwidG9wXCIpIHRvIHNlZSB0aGUgbmV3ZXN0IHBvc3RzLiIsICJhdXRob3JfZnVsbG5hbWUiOiAidDJfNmw0ejMiLCAic2F2ZWQiOiBmYWxzZSwgIm1vZF9yZWFzb25fdGl0bGUiOiBudWxsLCAiZ2lsZGVkIjogMCwgImNsaWNrZWQiOiBmYWxzZSwgInRpdGxlIjogIkZlZWRiYWNrIEZyaWRheSEgLSBNYXkgMTYsIDIwMjUiLCAibGlua19mbGFpcl9yaWNodGV4dCI6IFtdLCAic3VicmVkZGl0X25hbWVfcHJlZml4ZWQiOiAici9FbnRyZXByZW5ldXIiLCAiaGlkZGVuIjogZmFsc2UsICJwd2xzIjogNiwgImxpbmtfZmxhaXJfY3NzX2NsYXNzIjogbnVsbCwgImRvd25zIjogMCwgInRvcF9hd2FyZGVkX3R5cGUiOiBudWxsLCAiaGlkZV9zY29yZSI6IGZhbHNlLCAibmFtZSI6ICJ0M18xa253N3d5IiwgInF1YXJhbnRpbmUiOiBmYWxzZSwgImxpbmtfZmxhaXJfdGV4dF9jb2xvciI6ICJkYXJrIiwgInVwdm90ZV9yYXRpbyI6IDEuMCwgImF1dGhvcl9mbGFpcl9iYWNrZ3JvdW5kX2NvbG9yIjogbnVsbCwgInN1YnJlZGRpdF90eXBlIjogInB1YmxpYyIsICJ1cHMiOiAyLCAidG90YWxfYXdhcmRzX3JlY2VpdmVkIjogMCwgIm1lZGlhX2VtYmVkIjoge30sICJhdXRob3JfZmxhaXJfdGVtcGxhdGVfaWQiOiBudWxsLCAiaXNfb3JpZ2luYWxfY29udGVudCI6IGZhbHNlLCAidXNlcl9yZXBvcnRzIjogW10sICJzZWN1cmVfbWVkaWEiOiBudWxsLCAiaXNfcmVkZGl0X21lZGlhX2RvbWFpbiI6IGZhbHNlLCAiaXNfbWV0YSI6IGZhbHNlLCAiY2F0ZWdvcnkiOiBudWxsLCAic2VjdXJlX21lZGlhX2VtYmVkIjoge30sICJsaW5rX2ZsYWlyX3RleHQiOiBudWxsLCAiY2FuX21vZF9wb3N0IjogZmFsc2UsICJzY29yZSI6IDIsICJhcHByb3ZlZF9ieSI6IG51bGwsICJpc19jcmVhdGVkX2Zyb21fYWRzX3VpIjogZmFsc2UsICJhdXRob3JfcHJlbWl1bSI6IHRydWUsICJ0aHVtYm5haWwiOiAiIiwgImVkaXRlZCI6IGZhbHNlLCAiYXV0aG9yX2ZsYWlyX2Nzc19jbGFzcyI6IG51bGwsICJhdXRob3JfZmxhaXJfcmljaHRleHQiOiBbXSwgImdpbGRpbmdzIjoge30sICJjb250ZW50X2NhdGVnb3JpZXMiOiBudWxsLCAiaXNfc2VsZiI6IHRydWUsICJtb2Rfbm90ZSI6IG51bGwsICJjcmVhdGVkIjogMTc0NzM4NjA5NC4wLCAibGlua19mbGFpcl90eXBlIjogInRleHQiLCAid2xzIjogNiwgInJlbW92ZWRfYnlfY2F0ZWdvcnkiOiBudWxsLCAiYmFubmVkX2J5IjogbnVsbCwgImF1dGhvcl9mbGFpcl90eXBlIjogInRleHQiLCAiZG9tYWluIjogInNlbGYuRW50cmVwcmVuZXVyIiwgImFsbG93X2xpdmVfY29tbWVudHMiOiBmYWxzZSwgInNlbGZ0ZXh0X2h0bWwiOiAiJmx0OyEtLSBTQ19PRkYgLS0mZ3Q7Jmx0O2RpdiBjbGFzcz1cIm1kXCImZ3Q7Jmx0O3AmZ3Q7TmVlZCBoZWxwIHdpdGggeW91ciB3ZWJzaXRlIG9yIHBvcnRmb2xpbz8gV2FudCBhZHZpY2UgZnJvbSBvdGhlciBlbnRyZXByZW5ldXJzIG9uIHdoYXQgeW91IGNvdWxkIGltcHJvdmU/Jmx0Oy9wJmd0O1xuXG4mbHQ7cCZndDtTaGFyZSB5b3VyIHN0dWZmIGhlcmUgYW5kIGdldCBmZWVkYmFjayBmcm9tIG91ciBjb21tdW5pdHkuICZsdDsvcCZndDtcblxuJmx0O3AmZ3Q7U2luY2UgdGhpcyB0aHJlYWQgY2FuIGZpbGwgdXAgcXVpY2tseSwgY29uc2lkZXIgc29ydGluZyB0aGUgY29tbWVudHMgYnkgJmFtcDtxdW90O25ldyZhbXA7cXVvdDsgKGluc3RlYWQgb2YgJmFtcDtxdW90O2Jlc3QmYW1wO3F1b3Q7IG9yICZhbXA7cXVvdDt0b3AmYW1wO3F1b3Q7KSB0byBzZWUgdGhlIG5ld2VzdCBwb3N0cy4mbHQ7L3AmZ3Q7XG4mbHQ7L2RpdiZndDsmbHQ7IS0tIFNDX09OIC0tJmd0OyIsICJsaWtlcyI6IG51bGwsICJzdWdnZXN0ZWRfc29ydCI6ICJuZXciLCAiYmFubmVkX2F0X3V0YyI6IG51bGwsICJ2aWV3X2NvdW50IjogbnVsbCwgImFyY2hpdmVkIjogZmFsc2UsICJub19mb2xsb3ciOiBmYWxzZSwgImlzX2Nyb3NzcG9zdGFibGUiOiBmYWxzZSwgInBpbm5lZCI6IGZhbHNlLCAib3Zlcl8xOCI6IGZhbHNlLCAiYWxsX2F3YXJkaW5ncyI6IFtdLCAiYXdhcmRlcnMiOiBbXSwgIm1lZGlhX29ubHkiOiBmYWxzZSwgImNhbl9naWxkIjogZmFsc2UsICJzcG9pbGVyIjogZmFsc2UsICJsb2NrZWQiOiBmYWxzZSwgImF1dGhvcl9mbGFpcl90ZXh0IjogbnVsbCwgInRyZWF0bWVudF90YWdzIjogW10sICJ2aXNpdGVkIjogZmFsc2UsICJyZW1vdmVkX2J5IjogbnVsbCwgIm51bV9yZXBvcnRzIjogbnVsbCwgImRpc3Rpbmd1aXNoZWQiOiBudWxsLCAic3VicmVkZGl0X2lkIjogInQ1XzJxbGRvIiwgImF1dGhvcl9pc19ibG9ja2VkIjogZmFsc2UsICJtb2RfcmVhc29uX2J5IjogbnVsbCwgInJlbW92YWxfcmVhc29uIjogbnVsbCwgImxpbmtfZmxhaXJfYmFja2dyb3VuZF9jb2xvciI6ICIiLCAiaWQiOiAiMWtudzd3eSIsICJpc19yb2JvdF9pbmRleGFibGUiOiB0cnVlLCAicmVwb3J0X3JlYXNvbnMiOiBudWxsLCAiYXV0aG9yIjogIkF1dG9Nb2RlcmF0b3IiLCAiZGlzY3Vzc2lvbl90eXBlIjogbnVsbCwgIm51bV9jb21tZW50cyI6IDcsICJzZW5kX3JlcGxpZXMiOiB0cnVlLCAiY29udGVzdF9tb2RlIjogZmFsc2UsICJtb2RfcmVwb3J0cyI6IFtdLCAiYXV0aG9yX3BhdHJlb25fZmxhaXIiOiBmYWxzZSwgImF1dGhvcl9mbGFpcl90ZXh0X2NvbG9yIjogbnVsbCwgInBlcm1hbGluayI6ICIvci9FbnRyZXByZW5ldXIvY29tbWVudHMvMWtudzd3eS9mZWVkYmFja19mcmlkYXlfbWF5XzE2XzIwMjUvIiwgInN0aWNraWVkIjogdHJ1ZSwgInVybCI6ICJodHRwczovL3d3dy5yZWRkaXQuY29tL3IvRW50cmVwcmVuZXVyL2NvbW1lbnRzLzFrbnc3d3kvZmVlZGJhY2tfZnJpZGF5X21heV8xNl8yMDI1LyIsICJzdWJyZWRkaXRfc3Vic2NyaWJlcnMiOiA0NzIyNzQzLCAiY3JlYXRlZF91dGMiOiAxNzQ3Mzg2MDk0LjAsICJudW1fY3Jvc3Nwb3N0cyI6IDAsICJtZWRpYSI6IG51bGwsICJpc192aWRlbyI6IGZhbHNlfX0sIHsia2luZCI6ICJ0MyIsICJkYXRhIjogeyJhcHByb3ZlZF9hdF91dGMiOiBudWxsLCAic3VicmVkZGl0IjogIkVudHJlcHJlbmV1ciIsICJzZWxmdGV4dCI6ICJBbm5veWVkIGJ5IEFJLXdyaXR0ZW4gcG9zdHMgZnVsbCBvZiBzdGVhbHRoIHByb21vdGlvbj8gV2UgYXJlLCB0b28uIFdoZW5ldmVyIHlvdSBzZWUgaXQsIGhpdCB0aGF0IHJlcG9ydCBidXR0b24hIFRoZSBtYWpvcml0eSBvZiBzcGFtIHRoYXQgbWFrZXMgaXQgdGhyb3VnaCBvdXIgZXZlci1ldm9sdmluZyBmaWx0ZXJzIGlzIG5ldmVyIHJlcG9ydGVkIHRvIG91ciBtb2QgdGVhbSwgZXZlbiB3aGVuIHRoZSBjb21tZW50cyBhcmUgZnVsbCBvZiBjb21wbGFpbnRzIGFib3V0IHRoZSBjb250ZW50IHZpb2xhdGluZyBvdXIgcnVsZXMuXG5cblRha2UgYSBtb21lbnQgdG8gcmVyZWFkIHR3byBvZiBvdXIgbW9zdCBpbXBvcnRhbnQgcnVsZXM6XG5cbiMjUnVsZSAyOiBObyBQcm9tb3Rpb24gIFxuXG4mZ3Q7IFBvc3RzIGFuZCBjb21tZW50cyBtdXN0IE5PVCBiZSBtYWRlIGZvciB0aGUgcHJpbWFyeSBwdXJwb3NlIG9mIHNlbGxpbmcgb3IgcHJvbW90aW5nIHlvdXJzZWxmLCB5b3VyIGNvbXBhbnkgb3IgYW55IHNlcnZpY2UuXG4mZ3Q7XG4mZ3Q7IERyb3BwaW5nIFVSTHMsIGFza2luZyB1c2VycyB0byBETSB5b3UsIGNoZWNrIHlvdXIgcHJvZmlsZSwgb3IgY29tbWVudCBmb3IgcHJpdmF0ZSByZXNvdXJjZXMgd2lsbCBhbGwgbGVhZCB0byBhIHBlcm1hbmVudCBiYW4uXG4mZ3Q7XG4mZ3Q7IEl0IGlzIGFjY2VwdGFibGUgdG8gY2l0ZSB5b3VyIHNvdXJjZXMsIGhvd2V2ZXIsIHRoZXJlIHNob3VsZCBub3QgYmUgYW4gZXhwbGljaXQgc29saWNpdGF0aW9uLCBhZHZlcnRpc2VtZW50LCBvciBjbGVhciBwcm9tb3Rpb24gZm9yIHRoZSBpbnRlbnQgb2YgYXdhcmVuZXNzLlxuXG4jI1J1bGUgNjogQXZvaWQgdW5wcm9mZXNzaW9uYWwgY29tbXVuaWNhdGlvbiAgXG5cbiZndDsgQXMgYSBwcm9mZXNzaW9uYWwgc3VicmVkZGl0LCB3ZSBleHBlY3QgYWxsIG1lbWJlcnMgdG8gdXBob2xkIGEgc3RhbmRhcmQgb2YgcmVhc29uYWJsZSBkZWNvcnVtLiBUcmVhdCBmZWxsb3cgZW50cmVwcmVuZXVycyB3aXRoIHRoZSBzYW1lIHJlc3BlY3QgeW91IHdvdWxkIHNob3cgYSBjb2xsZWFndWUuIFdoaWxlIHdlIGRvbid0IGhhdmUgYW4gSFIgZGVwYXJ0bWVudCwgdGhhdFx1MjAxOXMgbm8gZXhjdXNlIGZvciBhZ2dyZXNzaXZlLCBmb3VsLCBvciB1bnByb2Zlc3Npb25hbCBiZWhhdmlvci4gTlNGVyB0b3BpY3MgYXJlIHBlcm1pdHRlZCwgYnV0IHRoZXkgbXVzdCBiZSBjbGVhcmx5IGxhYmVsZWQuIFdoZW4gaW4gZG91YnQsIGxhYmVsIGl0LlxuJmd0OyBcbiZndDsgQUktZ2VuZXJhdGVkIGNvbnRlbnQgaXMgbm90IGFjY2VwdGFibGUgdG8gYmUgcG9zdGVkLiBJZiB5b3VyIHBvc3RzIG9yIGNvbW1lbnRzIHdlcmUgZ2VuZXJhdGVkIHdpdGggQUksIHlvdSBtYXkgZmFjZSBhIHBlcm1hbmVudCBiYW4uXG5cbioqSWYgeW91IHNlZSBjb21tZW50cyBvciBwb3N0cyBnZW5lcmF0ZWQgYnkgQUkgb3IgdXNpbmcgdGhlIHN1YnJlZGRpdCBmb3IgcHJvbW90aW9uIHJhdGhlciB0aGFuIGdlbnVpbmUgZW50cmVwcmVuZXVyc2hpcCBkaXNjdXNzaW9uLCBwbGVhc2UgcmVwb3J0IGl0LioqXG5cbkhhdmUgcXVlc3Rpb25zPyBbTWVzc2FnZSB0aGUgbW9kIHRlYW1dKGh0dHBzOi8vd3d3LnJlZGRpdC5jb20vbWVzc2FnZS9jb21wb3NlLz90bz0vci9FbnRyZXByZW5ldXIpLiIsICJhdXRob3JfZnVsbG5hbWUiOiAidDJfNmw0ejMiLCAic2F2ZWQiOiBmYWxzZSwgIm1vZF9yZWFzb25fdGl0bGUiOiBudWxsLCAiZ2lsZGVkIjogMCwgImNsaWNrZWQiOiBmYWxzZSwgInRpdGxlIjogIlNpY2sgb2YgU3BhbT8gVXNlIHRoZSBSZXBvcnQgQnV0dG9uISIsICJsaW5rX2ZsYWlyX3JpY2h0ZXh0IjogW3siZSI6ICJ0ZXh0IiwgInQiOiAiXHVkODNkXHVkY2UyIEFubm91bmNlbWVudCJ9XSwgInN1YnJlZGRpdF9uYW1lX3ByZWZpeGVkIjogInIvRW50cmVwcmVuZXVyIiwgImhpZGRlbiI6IGZhbHNlLCAicHdscyI6IDYsICJsaW5rX2ZsYWlyX2Nzc19jbGFzcyI6ICIiLCAiZG93bnMiOiAwLCAidG9wX2F3YXJkZWRfdHlwZSI6IG51bGwsICJoaWRlX3Njb3JlIjogZmFsc2UsICJuYW1lIjogInQzXzFrMXdhbTkiLCAicXVhcmFudGluZSI6IGZhbHNlLCAibGlua19mbGFpcl90ZXh0X2NvbG9yIjogImRhcmsiLCAidXB2b3RlX3JhdGlvIjogMC45LCAiYXV0aG9yX2ZsYWlyX2JhY2tncm91bmRfY29sb3IiOiBudWxsLCAic3VicmVkZGl0X3R5cGUiOiAicHVibGljIiwgInVwcyI6IDcsICJ0b3RhbF9hd2FyZHNfcmVjZWl2ZWQiOiAwLCAibWVkaWFfZW1iZWQiOiB7fSwgImF1dGhvcl9mbGFpcl90ZW1wbGF0ZV9pZCI6IG51bGwsICJpc19vcmlnaW5hbF9jb250ZW50IjogZmFsc2UsICJ1c2VyX3JlcG9ydHMiOiBbXSwgInNlY3VyZV9tZWRpYSI6IG51bGwsICJpc19yZWRkaXRfbWVkaWFfZG9tYWluIjogZmFsc2UsICJpc19tZXRhIjogZmFsc2UsICJjYXRlZ29yeSI6IG51bGwsICJzZWN1cmVfbWVkaWFfZW1iZWQiOiB7fSwgImxpbmtfZmxhaXJfdGV4dCI6ICJcdWQ4M2RcdWRjZTIgQW5ub3VuY2VtZW50IiwgImNhbl9tb2RfcG9zdCI6IGZhbHNlLCAic2NvcmUiOiA3LCAiYXBwcm92ZWRfYnkiOiBudWxsLCAiaXNfY3JlYXRlZF9mcm9tX2Fkc191aSI6IGZhbHNlLCAiYXV0aG9yX3ByZW1pdW0iOiB0cnVlLCAidGh1bWJuYWlsIjogIiIsICJlZGl0ZWQiOiBmYWxzZSwgImF1dGhvcl9mbGFpcl9jc3NfY2xhc3MiOiBudWxsLCAiYXV0aG9yX2ZsYWlyX3JpY2h0ZXh0IjogW10sICJnaWxkaW5ncyI6IHt9LCAiY29udGVudF9jYXRlZ29yaWVzIjogbnVsbCwgImlzX3NlbGYiOiB0cnVlLCAibW9kX25vdGUiOiBudWxsLCAiY3JlYXRlZCI6IDE3NDQ5NDk5OTYuMCwgImxpbmtfZmxhaXJfdHlwZSI6ICJyaWNodGV4dCIsICJ3bHMiOiA2LCAicmVtb3ZlZF9ieV9jYXRlZ29yeSI6IG51bGwsICJiYW5uZWRfYnkiOiBudWxsLCAiYXV0aG9yX2ZsYWlyX3R5cGUiOiAidGV4dCIsICJkb21haW4iOiAic2VsZi5FbnRyZXByZW5ldXIiLCAiYWxsb3dfbGl2ZV9jb21tZW50cyI6IGZhbHNlLCAic2VsZnRleHRfaHRtbCI6ICImbHQ7IS0tIFNDX09GRiAtLSZndDsmbHQ7ZGl2IGNsYXNzPVwibWRcIiZndDsmbHQ7cCZndDtBbm5veWVkIGJ5IEFJLXdyaXR0ZW4gcG9zdHMgZnVsbCBvZiBzdGVhbHRoIHByb21vdGlvbj8gV2UgYXJlLCB0b28uIFdoZW5ldmVyIHlvdSBzZWUgaXQsIGhpdCB0aGF0IHJlcG9ydCBidXR0b24hIFRoZSBtYWpvcml0eSBvZiBzcGFtIHRoYXQgbWFrZXMgaXQgdGhyb3VnaCBvdXIgZXZlci1ldm9sdmluZyBmaWx0ZXJzIGlzIG5ldmVyIHJlcG9ydGVkIHRvIG91ciBtb2QgdGVhbSwgZXZlbiB3aGVuIHRoZSBjb21tZW50cyBhcmUgZnVsbCBvZiBjb21wbGFpbnRzIGFib3V0IHRoZSBjb250ZW50IHZpb2xhdGluZyBvdXIgcnVsZXMuJmx0Oy9wJmd0O1xuXG4mbHQ7cCZndDtUYWtlIGEgbW9tZW50IHRvIHJlcmVhZCB0d28gb2Ygb3VyIG1vc3QgaW1wb3J0YW50IHJ1bGVzOiZsdDsvcCZndDtcblxuJmx0O2gyJmd0O1J1bGUgMjogTm8gUHJvbW90aW9uJmx0Oy9oMiZndDtcblxuJmx0O2Jsb2NrcXVvdGUmZ3Q7XG4mbHQ7cCZndDtQb3N0cyBhbmQgY29tbWVudHMgbXVzdCBOT1QgYmUgbWFkZSBmb3IgdGhlIHByaW1hcnkgcHVycG9zZSBvZiBzZWxsaW5nIG9yIHByb21vdGluZyB5b3Vyc2VsZiwgeW91ciBjb21wYW55IG9yIGFueSBzZXJ2aWNlLiZsdDsvcCZndDtcblxuJmx0O3AmZ3Q7RHJvcHBpbmcgVVJMcywgYXNraW5nIHVzZXJzIHRvIERNIHlvdSwgY2hlY2sgeW91ciBwcm9maWxlLCBvciBjb21tZW50IGZvciBwcml2YXRlIHJlc291cmNlcyB3aWxsIGFsbCBsZWFkIHRvIGEgcGVybWFuZW50IGJhbi4mbHQ7L3AmZ3Q7XG5cbiZsdDtwJmd0O0l0IGlzIGFjY2VwdGFibGUgdG8gY2l0ZSB5b3VyIHNvdXJjZXMsIGhvd2V2ZXIsIHRoZXJlIHNob3VsZCBub3QgYmUgYW4gZXhwbGljaXQgc29saWNpdGF0aW9uLCBhZHZlcnRpc2VtZW50LCBvciBjbGVhciBwcm9tb3Rpb24gZm9yIHRoZSBpbnRlbnQgb2YgYXdhcmVuZXNzLiZsdDsvcCZndDtcbiZsdDsvYmxvY2txdW90ZSZndDtcblxuJmx0O2gyJmd0O1J1bGUgNjogQXZvaWQgdW5wcm9mZXNzaW9uYWwgY29tbXVuaWNhdGlvbiZsdDsvaDImZ3Q7XG5cbiZsdDtibG9ja3F1b3RlJmd0O1xuJmx0O3AmZ3Q7QXMgYSBwcm9mZXNzaW9uYWwgc3VicmVkZGl0LCB3ZSBleHBlY3QgYWxsIG1lbWJlcnMgdG8gdXBob2xkIGEgc3RhbmRhcmQgb2YgcmVhc29uYWJsZSBkZWNvcnVtLiBUcmVhdCBmZWxsb3cgZW50cmVwcmVuZXVycyB3aXRoIHRoZSBzYW1lIHJlc3BlY3QgeW91IHdvdWxkIHNob3cgYSBjb2xsZWFndWUuIFdoaWxlIHdlIGRvbiZhbXA7IzM5O3QgaGF2ZSBhbiBIUiBkZXBhcnRtZW50LCB0aGF0XHUyMDE5cyBubyBleGN1c2UgZm9yIGFnZ3Jlc3NpdmUsIGZvdWwsIG9yIHVucHJvZmVzc2lvbmFsIGJlaGF2aW9yLiBOU0ZXIHRvcGljcyBhcmUgcGVybWl0dGVkLCBidXQgdGhleSBtdXN0IGJlIGNsZWFybHkgbGFiZWxlZC4gV2hlbiBpbiBkb3VidCwgbGFiZWwgaXQuJmx0Oy9wJmd0O1xuXG4mbHQ7cCZndDtBSS1nZW5lcmF0ZWQgY29udGVudCBpcyBub3QgYWNjZXB0YWJsZSB0byBiZSBwb3N0ZWQuIElmIHlvdXIgcG9zdHMgb3IgY29tbWVudHMgd2VyZSBnZW5lcmF0ZWQgd2l0aCBBSSwgeW91IG1heSBmYWNlIGEgcGVybWFuZW50IGJhbi4mbHQ7L3AmZ3Q7XG4mbHQ7L2Jsb2NrcXVvdGUmZ3Q7XG5cbiZsdDtwJmd0OyZsdDtzdHJvbmcmZ3Q7SWYgeW91IHNlZSBjb21tZW50cyBvciBwb3N0cyBnZW5lcmF0ZWQgYnkgQUkgb3IgdXNpbmcgdGhlIHN1YnJlZGRpdCBmb3IgcHJvbW90aW9uIHJhdGhlciB0aGFuIGdlbnVpbmUgZW50cmVwcmVuZXVyc2hpcCBkaXNjdXNzaW9uLCBwbGVhc2UgcmVwb3J0IGl0LiZsdDsvc3Ryb25nJmd0OyZsdDsvcCZndDtcblxuJmx0O3AmZ3Q7SGF2ZSBxdWVzdGlvbnM/ICZsdDthIGhyZWY9XCJodHRwczovL3d3dy5yZWRkaXQuY29tL21lc3NhZ2UvY29tcG9zZS8/dG89L3IvRW50cmVwcmVuZXVyXCImZ3Q7TWVzc2FnZSB0aGUgbW9kIHRlYW0mbHQ7L2EmZ3Q7LiZsdDsvcCZndDtcbiZsdDsvZGl2Jmd0OyZsdDshLS0gU0NfT04gLS0mZ3Q7IiwgImxpa2VzIjogbnVsbCwgInN1Z2dlc3RlZF9zb3J0IjogbnVsbCwgImJhbm5lZF9hdF91dGMiOiBudWxsLCAidmlld19jb3VudCI6IG51bGwsICJhcmNoaXZlZCI6IGZhbHNlLCAibm9fZm9sbG93IjogZmFsc2UsICJpc19jcm9zc3Bvc3RhYmxlIjogZmFsc2UsICJwaW5uZWQiOiBmYWxzZSwgIm92ZXJfMTgiOiBmYWxzZSwgImFsbF9hd2FyZGluZ3MiOiBbXSwgImF3YXJkZXJzIjogW10sICJtZWRpYV9vbmx5IjogZmFsc2UsICJsaW5rX2ZsYWlyX3RlbXBsYXRlX2lkIjogIjViNzA3ODUyLTFjMGItMTFmMC04OTIwLWE2YzljNzhhOWM1OCIsICJjYW5fZ2lsZCI6IGZhbHNlLCAic3BvaWxlciI6IGZhbHNlLCAibG9ja2VkIjogdHJ1ZSwgImF1dGhvcl9mbGFpcl90ZXh0IjogbnVsbCwgInRyZWF0bWVudF90YWdzIjogW10sICJ2aXNpdGVkIjogZmFsc2UsICJyZW1vdmVkX2J5IjogbnVsbCwgIm51bV9yZXBvcnRzIjogbnVsbCwgImRpc3Rpbmd1aXNoZWQiOiBudWxsLCAic3VicmVkZGl0X2lkIjogInQ1XzJxbGRvIiwgImF1dGhvcl9pc19ibG9ja2VkIjogZmFsc2UsICJtb2RfcmVhc29uX2J5IjogbnVsbCwgInJlbW92YWxfcmVhc29uIjogbnVsbCwgImxpbmtfZmxhaXJfYmFja2dyb3VuZF9jb2xvciI6ICIjZGYyMDIwIiwgImlkIjogIjFrMXdhbTkiLCAiaXNfcm9ib3RfaW5kZXhhYmxlIjogdHJ1ZSwgInJlcG9ydF9yZWFzb25zIjogbnVsbCwgImF1dGhvciI6ICJBdXRvTW9kZXJhdG9yIiwgImRpc2N1c3Npb25fdHlwZSI6IG51bGwsICJudW1fY29tbWVudHMiOiAxLCAic2VuZF9yZXBsaWVzIjogdHJ1ZSwgImNvbnRlc3RfbW9kZSI6IGZhbHNlLCAibW9kX3JlcG9ydHMiOiBbXSwgImF1dGhvcl9wYXRyZW9uX2ZsYWlyIjogZmFsc2UsICJhdXRob3JfZmxhaXJfdGV4dF9jb2xvciI6IG51bGwsICJwZXJtYWxpbmsiOiAiL3IvRW50cmVwcmVuZXVyL2NvbW1lbnRzLzFrMXdhbTkvc2lja19vZl9zcGFtX3VzZV90aGVfcmVwb3J0X2J1dHRvbi8iLCAic3RpY2tpZWQiOiB0cnVlLCAidXJsIjogImh0dHBzOi8vd3d3LnJlZGRpdC5jb20vci9FbnRyZXByZW5ldXIvY29tbWVudHMvMWsxd2FtOS9zaWNrX29mX3NwYW1fdXNlX3RoZV9yZXBvcnRfYnV0dG9uLyIsICJzdWJyZWRkaXRfc3Vic2NyaWJlcnMiOiA0NzIyNzQzLCAiY3JlYXRlZF91dGMiOiAxNzQ0OTQ5OTk2LjAsICJudW1fY3Jvc3Nwb3N0cyI6IDAsICJtZWRpYSI6IG51bGwsICJpc192aWRlbyI6IGZhbHNlfX0sIHsia2luZCI6ICJ0MyIsICJkYXRhIjogeyJhcHByb3ZlZF9hdF91dGMiOiBudWxsLCAic3VicmVkZGl0IjogIkVudHJlcHJlbmV1ciIsICJzZWxmdGV4dCI6ICJJIHN0YXJ0ZWQgbXkgY29tcGFueSBpbiAyMDIzIGFmdGVyIGJ1aWxkaW5nIGEgdG9uIG9mIHNvbHV0aW9ucyBsb29raW5nIGZvciBwcm9ibGVtcy4gIEknbSBhIHNvZnR3YXJlIGVuZ2luZWVyIHdobydzIGFsd2F5cyBmdWNraW5nIGxvdmVkIHdyaXRpbmcgY29kZS4gIEkgY2FuJ3Qgc3RvcC4gIEknbSBhbHdheXMgYnVpbGRpbmcgYW5kIGlmIEknbSBub3QgSSdtIGRlcHJlc3NlZC4gSSBidWlsdCBhIFNhYVMgdG9vbCBhdCB0aGUgYmVoZXN0IG9mIG15IHdpZmUsIGEgUEhEIGNoZW1pc3QsIHRvIHNvbHZlIGEgcmVhbCBwcm9ibGVtIHNoZSB3YXMgaGF2aW5nLiAgXG5cblRoZSB0aGluZyBpcywganVzdCBhcyBJIHdhcyBzdGFydGluZyB0byBzZWUgc3VjY2VzcyBhbmQgdGhlIHBvdGVudGlhbCB0byBwYXkgbXlzZWxmIGZyb20gdGhpcyBzaWRlIHByb2plY3Qgd2UgZ290IHByZWduYW50LiAgSSB3YXNuJ3QgZ29pbmcgdG8gcmlzayB0aGUgZnV0dXJlIG9mIG15IGNoaWxkIG9uIGFuIChzZW1pKXVucHJvdmVuIHNvZnR3YXJlIGlkZWEuIFNvIEkga2VwdCBteSBkYXkgam9iIGFuZCB3b3JrZWQgNjAgaG91cnMgYSB3ZWVrICg0MCBhdCB0aGUgZGF5IGpvYiwgMjAgYXQgdGhlIHN0YXJ0IHVwKSB0byBzY2FsZSB0aGUgYnVzaW5lc3MuICBTbyBtYW55IHRoaW5ncyBoaXQgYXQgb25jZSB0aG91Z2ggYW5kIGl0IHdhcyBhbiBleGNlcHRpb25hbGx5IHN0cmVzc2Z1bCB0aW1lIHRvd2FyZHMgdGhlIGVuZC4gIFxuXG5GYXN0IGZvcndhcmQgYW5vdGhlciB5ZWFyIGFuZCBJIGhhdmUgYW4gOCBtb250aCBvbGQgYW5kIDYgcGVvcGxlIHdvcmtpbmcgb24gdGhpcyBzaWRlLXByb2plY3QtdGhhdCdzLWdvdHRlbi1vdXQtb2YtaGFuZC4gSSB3YXMgc3RpbGwgd29ya2luZyBhIGRheSBqb2IgYW5kIGluY3JlZGlibHkgYnVybnQgb3V0LiAgQWdhaW4sIG5vdCB3aWxsaW5nIHRvIHJpc2sgbXkgZnV0dXJlIG9uIHRoZSBidXNpbmVzcyBhdCB0aGlzIHN0YWdlIGluIG15IGxpZmUsIEkgc3RhcnRlZCBsb29raW5nIGZvciBhIGJ1eWVyLiAgSSBmb3VuZCAzLCBvbmUgdmlhIG91dHJlYWNoIG9uIExpbmtlZEluIGFub3RoZXIgdmlhIGEgbmV0d29ya2luZyBldmVudCB0aGF0IGhhcHBlbmVkIGEgeWVhciBwcmlvciwgYW5kIGFub3RoZXIgd2FzIGEgY29udGFjdCBJIGtuZXcuICBJIHVsdGltYXRlbHkgdG9vayB0aGUgcmlza2llc3QgZGVhbCwgc28gbGVzcyBjYXNoIHVwIGZyb250IGJ1dCBtb3JlIHVwc2lkZSBwb3RlbnRpYWwgYW5kIG11Y2ggbW9yZSBpbnRlcmVzdGluZyB3b3JrLlxuXG5BdCB0aGUgZW5kIG9mIHRoZSBkYXksIEkgb3duZWQgODUuNSUgb2YgdGhlIGNvbXBhbnkgSSBzb2xkIGFuZCBub3cgaGF2ZSB0aGlzIHNhbGUgYXMgYSBmZWF0aGVyIGluIG15IGNhcC4gICBJJ20gY3VycmVudGx5IGJhY2sgdG8gYmVpbmcgYSBzdGFuZGFyZCBXLTIgZW1wbG95ZWUgb25seSwgYWxiZWl0IGEgZm91bmRpbmcgZW5naW5lZXIgYXQgdGhlIGNvbXBhbnkgdGhhdCBhY3F1aXJlZCBtaW5lLiAgSXQncyBzdWNoIGEgbWl4dHVyZSBvZiBoYXBwaW5lc3MsIGFueGlldHkgYW5kLCBvZGRseSBlbm91Z2gsIG51bWJuZXNzIHRvIHRoZSBzYWxlLiAgSSBmZWVsIGxpa2UgSSdtIHN0aWxsIHdvcmtpbmcgb24gYXdlc29tZSBzdHVmZiwgYnV0IGZ1bmRhbWVudGFsbHkgbXkgbGlmZSBoYXNuJ3QgY2hhbmdlZC4gIFdlJ2xsIGhhdmUgdGhlIGhvdXNlIHBhaWQgb2ZmLCBhbmQgdGhlIGtpZHMgY29sbGVnZSBmdW5kIHBhaWQgZm9yLCBidXQgSSdtIHN0aWxsIGp1c3QgYSB3b3JraW5nIHN0aWZmLiIsICJhdXRob3JfZnVsbG5hbWUiOiAidDJfM3RscXQiLCAic2F2ZWQiOiBmYWxzZSwgIm1vZF9yZWFzb25fdGl0bGUiOiBudWxsLCAiZ2lsZGVkIjogMCwgImNsaWNrZWQiOiBmYWxzZSwgInRpdGxlIjogIkkndmUgc29sZCBteSBib290c3RyYXBwZWQgc29mdHdhcmUgY29tcGFueSBmb3IgNyBmaWd1cmVzIGFmdGVyIHdvcmtpbmcgb24gaXQgZm9yIDIgeWVhcnMgd2hpbGUga2VlcGluZyBhIGRheSBqb2IuIEFNQSIsICJsaW5rX2ZsYWlyX3JpY2h0ZXh0IjogW3siZSI6ICJ0ZXh0IiwgInQiOiAiRXhpdHMgYW5kIEFjcXVpc2l0aW9ucyJ9XSwgInN1YnJlZGRpdF9uYW1lX3ByZWZpeGVkIjogInIvRW50cmVwcmVuZXVyIiwgImhpZGRlbiI6IGZhbHNlLCAicHdscyI6IDYsICJsaW5rX2ZsYWlyX2Nzc19jbGFzcyI6ICIiLCAiZG93bnMiOiAwLCAidG9wX2F3YXJkZWRfdHlwZSI6IG51bGwsICJoaWRlX3Njb3JlIjogZmFsc2UsICJuYW1lIjogInQzXzFrb2d6aHQiLCAicXVhcmFudGluZSI6IGZhbHNlLCAibGlua19mbGFpcl90ZXh0X2NvbG9yIjogImxpZ2h0IiwgInVwdm90ZV9yYXRpbyI6IDAuNzksICJhdXRob3JfZmxhaXJfYmFja2dyb3VuZF9jb2xvciI6IG51bGwsICJzdWJyZWRkaXRfdHlwZSI6ICJwdWJsaWMiLCAidXBzIjogNjcsICJ0b3RhbF9hd2FyZHNfcmVjZWl2ZWQiOiAwLCAibWVkaWFfZW1iZWQiOiB7fSwgImF1dGhvcl9mbGFpcl90ZW1wbGF0ZV9pZCI6IG51bGwsICJpc19vcmlnaW5hbF9jb250ZW50IjogZmFsc2UsICJ1c2VyX3JlcG9ydHMiOiBbXSwgInNlY3VyZV9tZWRpYSI6IG51bGwsICJpc19yZWRkaXRfbWVkaWFfZG9tYWluIjogZmFsc2UsICJpc19tZXRhIjogZmFsc2UsICJjYXRlZ29yeSI6IG51bGwsICJzZWN1cmVfbWVkaWFfZW1iZWQiOiB7fSwgImxpbmtfZmxhaXJfdGV4dCI6ICJFeGl0cyBhbmQgQWNxdWlzaXRpb25zIiwgImNhbl9tb2RfcG9zdCI6IGZhbHNlLCAic2NvcmUiOiA2NywgImFwcHJvdmVkX2J5IjogbnVsbCwgImlzX2NyZWF0ZWRfZnJvbV9hZHNfdWkiOiBmYWxzZSwgImF1dGhvcl9wcmVtaXVtIjogZmFsc2UsICJ0aHVtYm5haWwiOiAiIiwgImVkaXRlZCI6IGZhbHNlLCAiYXV0aG9yX2ZsYWlyX2Nzc19jbGFzcyI6IG51bGwsICJhdXRob3JfZmxhaXJfcmljaHRleHQiOiBbXSwgImdpbGRpbmdzIjoge30sICJjb250ZW50X2NhdGVnb3JpZXMiOiBudWxsLCAiaXNfc2VsZiI6IHRydWUsICJtb2Rfbm90ZSI6IG51bGwsICJjcmVhdGVkIjogMTc0NzQ0NDI2MC4wLCAibGlua19mbGFpcl90eXBlIjogInJpY2h0ZXh0IiwgIndscyI6IDYsICJyZW1vdmVkX2J5X2NhdGVnb3J5IjogbnVsbCwgImJhbm5lZF9ieSI6IG51bGwsICJhdXRob3JfZmxhaXJfdHlwZSI6ICJ0ZXh0IiwgImRvbWFpbiI6ICJzZWxmLkVudHJlcHJlbmV1ciIsICJhbGxvd19saXZlX2NvbW1lbnRzIjogZmFsc2UsICJzZWxmdGV4dF9odG1sIjogIiZsdDshLS0gU0NfT0ZGIC0tJmd0OyZsdDtkaXYgY2xhc3M9XCJtZFwiJmd0OyZsdDtwJmd0O0kgc3RhcnRlZCBteSBjb21wYW55IGluIDIwMjMgYWZ0ZXIgYnVpbGRpbmcgYSB0b24gb2Ygc29sdXRpb25zIGxvb2tpbmcgZm9yIHByb2JsZW1zLiAgSSZhbXA7IzM5O20gYSBzb2Z0d2FyZSBlbmdpbmVlciB3aG8mYW1wOyMzOTtzIGFsd2F5cyBmdWNraW5nIGxvdmVkIHdyaXRpbmcgY29kZS4gIEkgY2FuJmFtcDsjMzk7dCBzdG9wLiAgSSZhbXA7IzM5O20gYWx3YXlzIGJ1aWxkaW5nIGFuZCBpZiBJJmFtcDsjMzk7bSBub3QgSSZhbXA7IzM5O20gZGVwcmVzc2VkLiBJIGJ1aWx0IGEgU2FhUyB0b29sIGF0IHRoZSBiZWhlc3Qgb2YgbXkgd2lmZSwgYSBQSEQgY2hlbWlzdCwgdG8gc29sdmUgYSByZWFsIHByb2JsZW0gc2hlIHdhcyBoYXZpbmcuICAmbHQ7L3AmZ3Q7XG5cbiZsdDtwJmd0O1RoZSB0aGluZyBpcywganVzdCBhcyBJIHdhcyBzdGFydGluZyB0byBzZWUgc3VjY2VzcyBhbmQgdGhlIHBvdGVudGlhbCB0byBwYXkgbXlzZWxmIGZyb20gdGhpcyBzaWRlIHByb2plY3Qgd2UgZ290IHByZWduYW50LiAgSSB3YXNuJmFtcDsjMzk7dCBnb2luZyB0byByaXNrIHRoZSBmdXR1cmUgb2YgbXkgY2hpbGQgb24gYW4gKHNlbWkpdW5wcm92ZW4gc29mdHdhcmUgaWRlYS4gU28gSSBrZXB0IG15IGRheSBqb2IgYW5kIHdvcmtlZCA2MCBob3VycyBhIHdlZWsgKDQwIGF0IHRoZSBkYXkgam9iLCAyMCBhdCB0aGUgc3RhcnQgdXApIHRvIHNjYWxlIHRoZSBidXNpbmVzcy4gIFNvIG1hbnkgdGhpbmdzIGhpdCBhdCBvbmNlIHRob3VnaCBhbmQgaXQgd2FzIGFuIGV4Y2VwdGlvbmFsbHkgc3RyZXNzZnVsIHRpbWUgdG93YXJkcyB0aGUgZW5kLiAgJmx0Oy9wJmd0O1xuXG4mbHQ7cCZndDtGYXN0IGZvcndhcmQgYW5vdGhlciB5ZWFyIGFuZCBJIGhhdmUgYW4gOCBtb250aCBvbGQgYW5kIDYgcGVvcGxlIHdvcmtpbmcgb24gdGhpcyBzaWRlLXByb2plY3QtdGhhdCZhbXA7IzM5O3MtZ290dGVuLW91dC1vZi1oYW5kLiBJIHdhcyBzdGlsbCB3b3JraW5nIGEgZGF5IGpvYiBhbmQgaW5jcmVkaWJseSBidXJudCBvdXQuICBBZ2Fpbiwgbm90IHdpbGxpbmcgdG8gcmlzayBteSBmdXR1cmUgb24gdGhlIGJ1c2luZXNzIGF0IHRoaXMgc3RhZ2UgaW4gbXkgbGlmZSwgSSBzdGFydGVkIGxvb2tpbmcgZm9yIGEgYnV5ZXIuICBJIGZvdW5kIDMsIG9uZSB2aWEgb3V0cmVhY2ggb24gTGlua2VkSW4gYW5vdGhlciB2aWEgYSBuZXR3b3JraW5nIGV2ZW50IHRoYXQgaGFwcGVuZWQgYSB5ZWFyIHByaW9yLCBhbmQgYW5vdGhlciB3YXMgYSBjb250YWN0IEkga25ldy4gIEkgdWx0aW1hdGVseSB0b29rIHRoZSByaXNraWVzdCBkZWFsLCBzbyBsZXNzIGNhc2ggdXAgZnJvbnQgYnV0IG1vcmUgdXBzaWRlIHBvdGVudGlhbCBhbmQgbXVjaCBtb3JlIGludGVyZXN0aW5nIHdvcmsuJmx0Oy9wJmd0O1xuXG4mbHQ7cCZndDtBdCB0aGUgZW5kIG9mIHRoZSBkYXksIEkgb3duZWQgODUuNSUgb2YgdGhlIGNvbXBhbnkgSSBzb2xkIGFuZCBub3cgaGF2ZSB0aGlzIHNhbGUgYXMgYSBmZWF0aGVyIGluIG15IGNhcC4gICBJJmFtcDsjMzk7bSBjdXJyZW50bHkgYmFjayB0byBiZWluZyBhIHN0YW5kYXJkIFctMiBlbXBsb3llZSBvbmx5LCBhbGJlaXQgYSBmb3VuZGluZyBlbmdpbmVlciBhdCB0aGUgY29tcGFueSB0aGF0IGFjcXVpcmVkIG1pbmUuICBJdCZhbXA7IzM5O3Mgc3VjaCBhIG1peHR1cmUgb2YgaGFwcGluZXNzLCBhbnhpZXR5IGFuZCwgb2RkbHkgZW5vdWdoLCBudW1ibmVzcyB0byB0aGUgc2FsZS4gIEkgZmVlbCBsaWtlIEkmYW1wOyMzOTttIHN0aWxsIHdvcmtpbmcgb24gYXdlc29tZSBzdHVmZiwgYnV0IGZ1bmRhbWVudGFsbHkgbXkgbGlmZSBoYXNuJmFtcDsjMzk7dCBjaGFuZ2VkLiAgV2UmYW1wOyMzOTtsbCBoYXZlIHRoZSBob3VzZSBwYWlkIG9mZiwgYW5kIHRoZSBraWRzIGNvbGxlZ2UgZnVuZCBwYWlkIGZvciwgYnV0IEkmYW1wOyMzOTttIHN0aWxsIGp1c3QgYSB3b3JraW5nIHN0aWZmLiZsdDsvcCZndDtcbiZsdDsvZGl2Jmd0OyZsdDshLS0gU0NfT04gLS0mZ3Q7IiwgImxpa2VzIjogbnVsbCwgInN1Z2dlc3RlZF9zb3J0IjogImNvbmZpZGVuY2UiLCAiYmFubmVkX2F0X3V0YyI6IG51bGwsICJ2aWV3X2NvdW50IjogbnVsbCwgImFyY2hpdmVkIjogZmFsc2UsICJub19mb2xsb3ciOiBmYWxzZSwgImlzX2Nyb3NzcG9zdGFibGUiOiBmYWxzZSwgInBpbm5lZCI6IGZhbHNlLCAib3Zlcl8xOCI6IGZhbHNlLCAiYWxsX2F3YXJkaW5ncyI6IFtdLCAiYXdhcmRlcnMiOiBbXSwgIm1lZGlhX29ubHkiOiBmYWxzZSwgImxpbmtfZmxhaXJfdGVtcGxhdGVfaWQiOiAiY2MxYjA3ZjItMmE0My0xMWYwLWFmODctNzI3NDZkYzU4NTI4IiwgImNhbl9naWxkIjogZmFsc2UsICJzcG9pbGVyIjogZmFsc2UsICJsb2NrZWQiOiBmYWxzZSwgImF1dGhvcl9mbGFpcl90ZXh0IjogbnVsbCwgInRyZWF0bWVudF90YWdzIjogW10sICJ2aXNpdGVkIjogZmFsc2UsICJyZW1vdmVkX2J5IjogbnVsbCwgIm51bV9yZXBvcnRzIjogbnVsbCwgImRpc3Rpbmd1aXNoZWQiOiBudWxsLCAic3VicmVkZGl0X2lkIjogInQ1XzJxbGRvIiwgImF1dGhvcl9pc19ibG9ja2VkIjogZmFsc2UsICJtb2RfcmVhc29uX2J5IjogbnVsbCwgInJlbW92YWxfcmVhc29uIjogbnVsbCwgImxpbmtfZmxhaXJfYmFja2dyb3VuZF9jb2xvciI6ICIjMDAwMDAwIiwgImlkIjogIjFrb2d6aHQiLCAiaXNfcm9ib3RfaW5kZXhhYmxlIjogdHJ1ZSwgInJlcG9ydF9yZWFzb25zIjogbnVsbCwgImF1dGhvciI6ICJva2F3ZWkiLCAiZGlzY3Vzc2lvbl90eXBlIjogbnVsbCwgIm51bV9jb21tZW50cyI6IDI2LCAic2VuZF9yZXBsaWVzIjogdHJ1ZSwgImNvbnRlc3RfbW9kZSI6IGZhbHNlLCAibW9kX3JlcG9ydHMiOiBbXSwgImF1dGhvcl9wYXRyZW9uX2ZsYWlyIjogZmFsc2UsICJhdXRob3JfZmxhaXJfdGV4dF9jb2xvciI6IG51bGwsICJwZXJtYWxpbmsiOiAiL3IvRW50cmVwcmVuZXVyL2NvbW1lbnRzLzFrb2d6aHQvaXZlX3NvbGRfbXlfYm9vdHN0cmFwcGVkX3NvZnR3YXJlX2NvbXBhbnlfZm9yXzcvIiwgInN0aWNraWVkIjogZmFsc2UsICJ1cmwiOiAiaHR0cHM6Ly93d3cucmVkZGl0LmNvbS9yL0VudHJlcHJlbmV1ci9jb21tZW50cy8xa29nemh0L2l2ZV9zb2xkX215X2Jvb3RzdHJhcHBlZF9zb2Z0d2FyZV9jb21wYW55X2Zvcl83LyIsICJzdWJyZWRkaXRfc3Vic2NyaWJlcnMiOiA0NzIyNzQzLCAiY3JlYXRlZF91dGMiOiAxNzQ3NDQ0MjYwLjAsICJudW1fY3Jvc3Nwb3N0cyI6IDAsICJtZWRpYSI6IG51bGwsICJpc192aWRlbyI6IGZhbHNlfX0sIHsia2luZCI6ICJ0MyIsICJkYXRhIjogeyJhcHByb3ZlZF9hdF91dGMiOiBudWxsLCAic3VicmVkZGl0IjogIkVudHJlcHJlbmV1ciIsICJzZWxmdGV4dCI6ICJIZXkgYWxsISBJJ20gYXQgYSBwb3NpdGlvbiBpbiBteSBidXNpbmVzcyBJJ20gdW5iZWxpZXZhYmx5IGJsZXNzZWQgdG8gYmUgaW4sIHRob3VnaCB0aGF0J3MgY2F1c2luZyBhIGJpZyBpc3N1ZSByaWdodCBub3cuXG5cbiAgXG5CYXNpY2FsbHksIEkndmUgZ290dGVuIFRPTlMgb2YgaW50ZXJlc3QgYW5kIHByb3NwZWN0cyBjb21pbmcgaW4uIFRoZSBwcm9ibGVtPyBJIG5lZWQgYSBjbG9zZXIuIEkgaGF2ZSB0aGUgcmVzdCBvZiB0aGUgdGVhbSBidWlsdCBvdXQgKG1lZGlhIGJ1eWVyLCBtYW5hZ2VyLCBncmFwaGljIGRlc2lnbmVyLCBldGMuKSBidXQgd2hlbiBpdCBjb21lcyB0byBmaW5kaW5nIGEgY2xvc2VyLCBpdCdzIG5lYXIgaW1wb3NzaWJsZS4gSSd2ZSB0cmllZCBGYWNlYm9vaywgRml2ZXJyLCBVcHdvcmssIGV0YyB3aXRoIG5vIGx1Y2sgOi9cblxuICBcbldoZXJlIGRvIHknYWxsIGZpbmQgeW91ciBjbG9zZXJzPyBJIGZlZWwgbGlrZSBJJ20gcnVubmluZyBvdXQgb2Ygb3B0aW9ucy4gQW55IGFkdmljZSBpcyBncmVhdGx5IGFwcHJlY2lhdGVkIChvciBpZiB5b3UgS05PVyBhIGNsb3NlciwgdGhhdCB3b3VsZCBiZSBlc3BlY2lhbGx5IGFwcHJlY2lhdGVkKS5cblxuICBcblRoYW5rIHlvdSEhIiwgImF1dGhvcl9mdWxsbmFtZSI6ICJ0Ml8xM2Z0dTgwZGdoIiwgInNhdmVkIjogZmFsc2UsICJtb2RfcmVhc29uX3RpdGxlIjogbnVsbCwgImdpbGRlZCI6IDAsICJjbGlja2VkIjogZmFsc2UsICJ0aXRsZSI6ICJXaHkgaXMgaXQgaW1wb3NzaWJsZSB0byBmaW5kIHBlb3BsZSB0byB3b3JrIiwgImxpbmtfZmxhaXJfcmljaHRleHQiOiBbeyJlIjogInRleHQiLCAidCI6ICJIb3cgRG8gST8ifV0sICJzdWJyZWRkaXRfbmFtZV9wcmVmaXhlZCI6ICJyL0VudHJlcHJlbmV1ciIsICJoaWRkZW4iOiBmYWxzZSwgInB3bHMiOiA2LCAibGlua19mbGFpcl9jc3NfY2xhc3MiOiAiYmxhY2tud2hpdGVzbWFsbCIsICJkb3ducyI6IDAsICJ0b3BfYXdhcmRlZF90eXBlIjogbnVsbCwgImhpZGVfc2NvcmUiOiBmYWxzZSwgIm5hbWUiOiAidDNfMWtvMzVwcyIsICJxdWFyYW50aW5lIjogZmFsc2UsICJsaW5rX2ZsYWlyX3RleHRfY29sb3IiOiAiZGFyayIsICJ1cHZvdGVfcmF0aW8iOiAwLjg1LCAiYXV0aG9yX2ZsYWlyX2JhY2tncm91bmRfY29sb3IiOiBudWxsLCAic3VicmVkZGl0X3R5cGUiOiAicHVibGljIiwgInVwcyI6IDMwOSwgInRvdGFsX2F3YXJkc19yZWNlaXZlZCI6IDAsICJtZWRpYV9lbWJlZCI6IHt9LCAiYXV0aG9yX2ZsYWlyX3RlbXBsYXRlX2lkIjogbnVsbCwgImlzX29yaWdpbmFsX2NvbnRlbnQiOiBmYWxzZSwgInVzZXJfcmVwb3J0cyI6IFtdLCAic2VjdXJlX21lZGlhIjogbnVsbCwgImlzX3JlZGRpdF9tZWRpYV9kb21haW4iOiBmYWxzZSwgImlzX21ldGEiOiBmYWxzZSwgImNhdGVnb3J5IjogbnVsbCwgInNlY3VyZV9tZWRpYV9lbWJlZCI6IHt9LCAibGlua19mbGFpcl90ZXh0IjogIkhvdyBEbyBJPyIsICJjYW5fbW9kX3Bvc3QiOiBmYWxzZSwgInNjb3JlIjogMzA5LCAiYXBwcm92ZWRfYnkiOiBudWxsLCAiaXNfY3JlYXRlZF9mcm9tX2Fkc191aSI6IGZhbHNlLCAiYXV0aG9yX3ByZW1pdW0iOiBmYWxzZSwgInRodW1ibmFpbCI6ICIiLCAiZWRpdGVkIjogZmFsc2UsICJhdXRob3JfZmxhaXJfY3NzX2NsYXNzIjogbnVsbCwgImF1dGhvcl9mbGFpcl9yaWNodGV4dCI6IFtdLCAiZ2lsZGluZ3MiOiB7fSwgImNvbnRlbnRfY2F0ZWdvcmllcyI6IG51bGwsICJpc19zZWxmIjogdHJ1ZSwgIm1vZF9ub3RlIjogbnVsbCwgImNyZWF0ZWQiOiAxNzQ3NDA3OTUxLjAsICJsaW5rX2ZsYWlyX3R5cGUiOiAicmljaHRleHQiLCAid2xzIjogNiwgInJlbW92ZWRfYnlfY2F0ZWdvcnkiOiBudWxsLCAiYmFubmVkX2J5IjogbnVsbCwgImF1dGhvcl9mbGFpcl90eXBlIjogInRleHQiLCAiZG9tYWluIjogInNlbGYuRW50cmVwcmVuZXVyIiwgImFsbG93X2xpdmVfY29tbWVudHMiOiBmYWxzZSwgInNlbGZ0ZXh0X2h0bWwiOiAiJmx0OyEtLSBTQ19PRkYgLS0mZ3Q7Jmx0O2RpdiBjbGFzcz1cIm1kXCImZ3Q7Jmx0O3AmZ3Q7SGV5IGFsbCEgSSZhbXA7IzM5O20gYXQgYSBwb3NpdGlvbiBpbiBteSBidXNpbmVzcyBJJmFtcDsjMzk7bSB1bmJlbGlldmFibHkgYmxlc3NlZCB0byBiZSBpbiwgdGhvdWdoIHRoYXQmYW1wOyMzOTtzIGNhdXNpbmcgYSBiaWcgaXNzdWUgcmlnaHQgbm93LiZsdDsvcCZndDtcblxuJmx0O3AmZ3Q7QmFzaWNhbGx5LCBJJmFtcDsjMzk7dmUgZ290dGVuIFRPTlMgb2YgaW50ZXJlc3QgYW5kIHByb3NwZWN0cyBjb21pbmcgaW4uIFRoZSBwcm9ibGVtPyBJIG5lZWQgYSBjbG9zZXIuIEkgaGF2ZSB0aGUgcmVzdCBvZiB0aGUgdGVhbSBidWlsdCBvdXQgKG1lZGlhIGJ1eWVyLCBtYW5hZ2VyLCBncmFwaGljIGRlc2lnbmVyLCBldGMuKSBidXQgd2hlbiBpdCBjb21lcyB0byBmaW5kaW5nIGEgY2xvc2VyLCBpdCZhbXA7IzM5O3MgbmVhciBpbXBvc3NpYmxlLiBJJmFtcDsjMzk7dmUgdHJpZWQgRmFjZWJvb2ssIEZpdmVyciwgVXB3b3JrLCBldGMgd2l0aCBubyBsdWNrIDovJmx0Oy9wJmd0O1xuXG4mbHQ7cCZndDtXaGVyZSBkbyB5JmFtcDsjMzk7YWxsIGZpbmQgeW91ciBjbG9zZXJzPyBJIGZlZWwgbGlrZSBJJmFtcDsjMzk7bSBydW5uaW5nIG91dCBvZiBvcHRpb25zLiBBbnkgYWR2aWNlIGlzIGdyZWF0bHkgYXBwcmVjaWF0ZWQgKG9yIGlmIHlvdSBLTk9XIGEgY2xvc2VyLCB0aGF0IHdvdWxkIGJlIGVzcGVjaWFsbHkgYXBwcmVjaWF0ZWQpLiZsdDsvcCZndDtcblxuJmx0O3AmZ3Q7VGhhbmsgeW91ISEmbHQ7L3AmZ3Q7XG4mbHQ7L2RpdiZndDsmbHQ7IS0tIFNDX09OIC0tJmd0OyIsICJsaWtlcyI6IG51bGwsICJzdWdnZXN0ZWRfc29ydCI6ICJjb25maWRlbmNlIiwgImJhbm5lZF9hdF91dGMiOiBudWxsLCAidmlld19jb3VudCI6IG51bGwsICJhcmNoaXZlZCI6IGZhbHNlLCAibm9fZm9sbG93IjogZmFsc2UsICJpc19jcm9zc3Bvc3RhYmxlIjogZmFsc2UsICJwaW5uZWQiOiBmYWxzZSwgIm92ZXJfMTgiOiBmYWxzZSwgImFsbF9hd2FyZGluZ3MiOiBbXSwgImF3YXJkZXJzIjogW10sICJtZWRpYV9vbmx5IjogZmFsc2UsICJsaW5rX2ZsYWlyX3RlbXBsYXRlX2lkIjogImNjYjA0NzNjLWUxY2UtMTFlMy1hMjZmLTEyMzEzZDA1MWFiMCIsICJjYW5fZ2lsZCI6IGZhbHNlLCAic3BvaWxlciI6IGZhbHNlLCAibG9ja2VkIjogZmFsc2UsICJhdXRob3JfZmxhaXJfdGV4dCI6IG51bGwsICJ0cmVhdG1lbnRfdGFncyI6IFtdLCAidmlzaXRlZCI6IGZhbHNlLCAicmVtb3ZlZF9ieSI6IG51bGwsICJudW1fcmVwb3J0cyI6IG51bGwsICJkaXN0aW5ndWlzaGVkIjogbnVsbCwgInN1YnJlZGRpdF9pZCI6ICJ0NV8ycWxkbyIsICJhdXRob3JfaXNfYmxvY2tlZCI6IGZhbHNlLCAibW9kX3JlYXNvbl9ieSI6IG51bGwsICJyZW1vdmFsX3JlYXNvbiI6IG51bGwsICJsaW5rX2ZsYWlyX2JhY2tncm91bmRfY29sb3IiOiAiIzQ2ZDE2MCIsICJpZCI6ICIxa28zNXBzIiwgImlzX3JvYm90X2luZGV4YWJsZSI6IHRydWUsICJyZXBvcnRfcmVhc29ucyI6IG51bGwsICJhdXRob3IiOiAiTmVhcmJ5X09iamVjdDI1NzgiLCAiZGlzY3Vzc2lvbl90eXBlIjogbnVsbCwgIm51bV9jb21tZW50cyI6IDE3MCwgInNlbmRfcmVwbGllcyI6IHRydWUsICJjb250ZXN0X21vZGUiOiBmYWxzZSwgIm1vZF9yZXBvcnRzIjogW10sICJhdXRob3JfcGF0cmVvbl9mbGFpciI6IGZhbHNlLCAiYXV0aG9yX2ZsYWlyX3RleHRfY29sb3IiOiBudWxsLCAicGVybWFsaW5rIjogIi9yL0VudHJlcHJlbmV1ci9jb21tZW50cy8xa28zNXBzL3doeV9pc19pdF9pbXBvc3NpYmxlX3RvX2ZpbmRfcGVvcGxlX3RvX3dvcmsvIiwgInN0aWNraWVkIjogZmFsc2UsICJ1cmwiOiAiaHR0cHM6Ly93d3cucmVkZGl0LmNvbS9yL0VudHJlcHJlbmV1ci9jb21tZW50cy8xa28zNXBzL3doeV9pc19pdF9pbXBvc3NpYmxlX3RvX2ZpbmRfcGVvcGxlX3RvX3dvcmsvIiwgInN1YnJlZGRpdF9zdWJzY3JpYmVycyI6IDQ3MjI3NDMsICJjcmVhdGVkX3V0YyI6IDE3NDc0MDc5NTEuMCwgIm51bV9jcm9zc3Bvc3RzIjogMCwgIm1lZGlhIjogbnVsbCwgImlzX3ZpZGVvIjogZmFsc2V9fSwgeyJraW5kIjogInQzIiwgImRhdGEiOiB7ImFwcHJvdmVkX2F0X3V0YyI6IG51bGwsICJzdWJyZWRkaXQiOiAiRW50cmVwcmVuZXVyIiwgInNlbGZ0ZXh0IjogIlRocmVlIHllYXJzIGFnbywgSSB3YXMgaW5zaWRlIGphaWwgZmVlbGluZyBob3BlbGVzcyBhbmQgbG9zdC4gQnV0IHRvZGF5LCBJXHUyMDE5bSBmdWxmaWxsZWQgcnVubmluZyBteSBvd24gc3RyZWV0IGZvb2QgYnVzaW5lc3MuIEkgc3RhcnRlZCB3aXRoIGp1c3QgJDMyMCBzYXZpbmdzIHVzZWQgdGhhdCB0byBidXkgYSBncmlsbCBhbmQgcmVudCBhIHNtYWxsIHNwb3Qgb24gdGhlIHN0cmVldC4gSSBiZWdhbiBzZWxsaW5nIGNoYXBhdGkgaW4gdGhlIGV2ZW5pbmdzLlxuXG5JIHN0YXJ0ZWQgc2VsbGluZyBwbGFpbiBjaGFwYXRpIGluIHRoZSBldmVuaW5ncyB3aXRoIG5vIGJlYW5zLCBubyBzdGV3IGp1c3QgY2hhcGF0aS4gTW9zdCBzZWxsZXJzIGluIE5haXJvYmkgYWRkIHNvbWV0aGluZyB3aXRoIGl0LCBidXQgSSBkaWRuXHUyMDE5dCB3YWl0IHRvIGJlIHBlcmZlY3QuIEkganVzdCBzdGFydGVkLlxuXG5BdCBmaXJzdCwgcGVvcGxlIGlnbm9yZWQgbWUuIEl0IHdhcyBkaXNjb3VyYWdpbmcuIEJ1dCBJIHNob3dlZCB1cCBldmVyeSBkYXkuIFNhbWUgdGltZSwgc2FtZSBzcG90LiBTbG93bHksIGN1c3RvbWVycyBzdGFydGVkIG5vdGljaW5nLiBUaGVuIHRoZXkgc3RhcnRlZCBidXlpbmcuIEkgcHV0IGVmZm9ydCBpbnRvIG15IHJlY2lwZSwgdXNlZCBteSBza2lsbHMsIGFuZCBub3cgbXkgY2hhcGF0aXMgc2xhcCBzb2Z0IGFuZCBmcmVzaC4gSSBoYXZlIHJlZ3VsYXIgY3VzdG9tZXJzIGFuZCBJXHUyMDE5bSBwbGFubmluZyB0byBhZGQgc3RldyBvciBzYXVzYWdlcyBuZXh0LlxuXG5XaGF0IElcdTIwMTl2ZSBsZWFybmVkP1xuU3RhcnQgd2l0aCB3aGF0IHlvdSBoYXZlLlxuU3RheSBjb25zaXN0ZW50LlxuTGl2ZSBiZWxvdyB5b3VyIG1lYW5zLlxuTGV0IHlvdXJzZWxmIGdldCBsb3N0LCBidXQgZG9uXHUyMDE5dCBzdG9wLlxuXG5Ub2RheSBJXHUyMDE5bSBjbGVhbiwgZnVsZmlsbGVkLCBhbmQgYnVpbGRpbmcgYSBmdXR1cmUgd2l0aCBteSBoYW5kcy4gVGhpcyBjaGFwYXRpIGh1c3RsZSBpcyBjaGFuZ2luZyBteSBsaWZlLlxuXG4iLCAiYXV0aG9yX2Z1bGxuYW1lIjogInQyXzFrZnFzZmQ2cjgiLCAic2F2ZWQiOiBmYWxzZSwgIm1vZF9yZWFzb25fdGl0bGUiOiBudWxsLCAiZ2lsZGVkIjogMCwgImNsaWNrZWQiOiBmYWxzZSwgInRpdGxlIjogIkkgV2FzIGluIEphaWwgMyBZZWFycyBBZ28uIE5vdyBJIFNlbGwgQ2hhcGF0aShmbGF0IGJyZWFkKSBhbmQgSVx1MjAxOW0gV2lubmluZyBTbG93bHkiLCAibGlua19mbGFpcl9yaWNodGV4dCI6IFt7ImUiOiAidGV4dCIsICJ0IjogIlN1Y2Nlc3MgU3RvcnkifV0sICJzdWJyZWRkaXRfbmFtZV9wcmVmaXhlZCI6ICJyL0VudHJlcHJlbmV1ciIsICJoaWRkZW4iOiBmYWxzZSwgInB3bHMiOiA2LCAibGlua19mbGFpcl9jc3NfY2xhc3MiOiAiYmxhY2tud2hpdGVzbWFsbCIsICJkb3ducyI6IDAsICJ0b3BfYXdhcmRlZF90eXBlIjogbnVsbCwgImhpZGVfc2NvcmUiOiBmYWxzZSwgIm5hbWUiOiAidDNfMWtuaWZieCIsICJxdWFyYW50aW5lIjogZmFsc2UsICJsaW5rX2ZsYWlyX3RleHRfY29sb3IiOiAibGlnaHQiLCAidXB2b3RlX3JhdGlvIjogMC45NywgImF1dGhvcl9mbGFpcl9iYWNrZ3JvdW5kX2NvbG9yIjogbnVsbCwgInN1YnJlZGRpdF90eXBlIjogInB1YmxpYyIsICJ1cHMiOiA4OTEsICJ0b3RhbF9hd2FyZHNfcmVjZWl2ZWQiOiAwLCAibWVkaWFfZW1iZWQiOiB7fSwgImF1dGhvcl9mbGFpcl90ZW1wbGF0ZV9pZCI6IG51bGwsICJpc19vcmlnaW5hbF9jb250ZW50IjogZmFsc2UsICJ1c2VyX3JlcG9ydHMiOiBbXSwgInNlY3VyZV9tZWRpYSI6IG51bGwsICJpc19yZWRkaXRfbWVkaWFfZG9tYWluIjogZmFsc2UsICJpc19tZXRhIjogZmFsc2UsICJjYXRlZ29yeSI6IG51bGwsICJzZWN1cmVfbWVkaWFfZW1iZWQiOiB7fSwgImxpbmtfZmxhaXJfdGV4dCI6ICJTdWNjZXNzIFN0b3J5IiwgImNhbl9tb2RfcG9zdCI6IGZhbHNlLCAic2NvcmUiOiA4OTEsICJhcHByb3ZlZF9ieSI6IG51bGwsICJpc19jcmVhdGVkX2Zyb21fYWRzX3VpIjogZmFsc2UsICJhdXRob3JfcHJlbWl1bSI6IGZhbHNlLCAidGh1bWJuYWlsIjogIiIsICJlZGl0ZWQiOiBmYWxzZSwgImF1dGhvcl9mbGFpcl9jc3NfY2xhc3MiOiBudWxsLCAiYXV0aG9yX2ZsYWlyX3JpY2h0ZXh0IjogW10sICJnaWxkaW5ncyI6IHt9LCAiY29udGVudF9jYXRlZ29yaWVzIjogbnVsbCwgImlzX3NlbGYiOiB0cnVlLCAibW9kX25vdGUiOiBudWxsLCAiY3JlYXRlZCI6IDE3NDczNDA3NzUuMCwgImxpbmtfZmxhaXJfdHlwZSI6ICJyaWNodGV4dCIsICJ3bHMiOiA2LCAicmVtb3ZlZF9ieV9jYXRlZ29yeSI6IG51bGwsICJiYW5uZWRfYnkiOiBudWxsLCAiYXV0aG9yX2ZsYWlyX3R5cGUiOiAidGV4dCIsICJkb21haW4iOiAic2VsZi5FbnRyZXByZW5ldXIiLCAiYWxsb3dfbGl2ZV9jb21tZW50cyI6IGZhbHNlLCAic2VsZnRleHRfaHRtbCI6ICImbHQ7IS0tIFNDX09GRiAtLSZndDsmbHQ7ZGl2IGNsYXNzPVwibWRcIiZndDsmbHQ7cCZndDtUaHJlZSB5ZWFycyBhZ28sIEkgd2FzIGluc2lkZSBqYWlsIGZlZWxpbmcgaG9wZWxlc3MgYW5kIGxvc3QuIEJ1dCB0b2RheSwgSVx1MjAxOW0gZnVsZmlsbGVkIHJ1bm5pbmcgbXkgb3duIHN0cmVldCBmb29kIGJ1c2luZXNzLiBJIHN0YXJ0ZWQgd2l0aCBqdXN0ICQzMjAgc2F2aW5ncyB1c2VkIHRoYXQgdG8gYnV5IGEgZ3JpbGwgYW5kIHJlbnQgYSBzbWFsbCBzcG90IG9uIHRoZSBzdHJlZXQuIEkgYmVnYW4gc2VsbGluZyBjaGFwYXRpIGluIHRoZSBldmVuaW5ncy4mbHQ7L3AmZ3Q7XG5cbiZsdDtwJmd0O0kgc3RhcnRlZCBzZWxsaW5nIHBsYWluIGNoYXBhdGkgaW4gdGhlIGV2ZW5pbmdzIHdpdGggbm8gYmVhbnMsIG5vIHN0ZXcganVzdCBjaGFwYXRpLiBNb3N0IHNlbGxlcnMgaW4gTmFpcm9iaSBhZGQgc29tZXRoaW5nIHdpdGggaXQsIGJ1dCBJIGRpZG5cdTIwMTl0IHdhaXQgdG8gYmUgcGVyZmVjdC4gSSBqdXN0IHN0YXJ0ZWQuJmx0Oy9wJmd0O1xuXG4mbHQ7cCZndDtBdCBmaXJzdCwgcGVvcGxlIGlnbm9yZWQgbWUuIEl0IHdhcyBkaXNjb3VyYWdpbmcuIEJ1dCBJIHNob3dlZCB1cCBldmVyeSBkYXkuIFNhbWUgdGltZSwgc2FtZSBzcG90LiBTbG93bHksIGN1c3RvbWVycyBzdGFydGVkIG5vdGljaW5nLiBUaGVuIHRoZXkgc3RhcnRlZCBidXlpbmcuIEkgcHV0IGVmZm9ydCBpbnRvIG15IHJlY2lwZSwgdXNlZCBteSBza2lsbHMsIGFuZCBub3cgbXkgY2hhcGF0aXMgc2xhcCBzb2Z0IGFuZCBmcmVzaC4gSSBoYXZlIHJlZ3VsYXIgY3VzdG9tZXJzIGFuZCBJXHUyMDE5bSBwbGFubmluZyB0byBhZGQgc3RldyBvciBzYXVzYWdlcyBuZXh0LiZsdDsvcCZndDtcblxuJmx0O3AmZ3Q7V2hhdCBJXHUyMDE5dmUgbGVhcm5lZD9cblN0YXJ0IHdpdGggd2hhdCB5b3UgaGF2ZS5cblN0YXkgY29uc2lzdGVudC5cbkxpdmUgYmVsb3cgeW91ciBtZWFucy5cbkxldCB5b3Vyc2VsZiBnZXQgbG9zdCwgYnV0IGRvblx1MjAxOXQgc3RvcC4mbHQ7L3AmZ3Q7XG5cbiZsdDtwJmd0O1RvZGF5IElcdTIwMTltIGNsZWFuLCBmdWxmaWxsZWQsIGFuZCBidWlsZGluZyBhIGZ1dHVyZSB3aXRoIG15IGhhbmRzLiBUaGlzIGNoYXBhdGkgaHVzdGxlIGlzIGNoYW5naW5nIG15IGxpZmUuJmx0Oy9wJmd0O1xuJmx0Oy9kaXYmZ3Q7Jmx0OyEtLSBTQ19PTiAtLSZndDsiLCAibGlrZXMiOiBudWxsLCAic3VnZ2VzdGVkX3NvcnQiOiAiY29uZmlkZW5jZSIsICJiYW5uZWRfYXRfdXRjIjogbnVsbCwgInZpZXdfY291bnQiOiBudWxsLCAiYXJjaGl2ZWQiOiBmYWxzZSwgIm5vX2ZvbGxvdyI6IGZhbHNlLCAiaXNfY3Jvc3Nwb3N0YWJsZSI6IGZhbHNlLCAicGlubmVkIjogZmFsc2UsICJvdmVyXzE4IjogZmFsc2UsICJhbGxfYXdhcmRpbmdzIjogW10sICJhd2FyZGVycyI6IFtdLCAibWVkaWFfb25seSI6IGZhbHNlLCAibGlua19mbGFpcl90ZW1wbGF0ZV9pZCI6ICJkYTczYTczMi1lMWNmLTExZTMtYTkwNy0xMjMxM2IwNzNkMTEiLCAiY2FuX2dpbGQiOiBmYWxzZSwgInNwb2lsZXIiOiBmYWxzZSwgImxvY2tlZCI6IGZhbHNlLCAiYXV0aG9yX2ZsYWlyX3RleHQiOiBudWxsLCAidHJlYXRtZW50X3RhZ3MiOiBbXSwgInZpc2l0ZWQiOiBmYWxzZSwgInJlbW92ZWRfYnkiOiBudWxsLCAibnVtX3JlcG9ydHMiOiBudWxsLCAiZGlzdGluZ3Vpc2hlZCI6IG51bGwsICJzdWJyZWRkaXRfaWQiOiAidDVfMnFsZG8iLCAiYXV0aG9yX2lzX2Jsb2NrZWQiOiBmYWxzZSwgIm1vZF9yZWFzb25fYnkiOiBudWxsLCAicmVtb3ZhbF9yZWFzb24iOiBudWxsLCAibGlua19mbGFpcl9iYWNrZ3JvdW5kX2NvbG9yIjogIiMwMDczNzMiLCAiaWQiOiAiMWtuaWZieCIsICJpc19yb2JvdF9pbmRleGFibGUiOiB0cnVlLCAicmVwb3J0X3JlYXNvbnMiOiBudWxsLCAiYXV0aG9yIjogImthY2hlcm9tc2VsYSIsICJkaXNjdXNzaW9uX3R5cGUiOiBudWxsLCAibnVtX2NvbW1lbnRzIjogMTEzLCAic2VuZF9yZXBsaWVzIjogdHJ1ZSwgImNvbnRlc3RfbW9kZSI6IGZhbHNlLCAibW9kX3JlcG9ydHMiOiBbXSwgImF1dGhvcl9wYXRyZW9uX2ZsYWlyIjogZmFsc2UsICJhdXRob3JfZmxhaXJfdGV4dF9jb2xvciI6IG51bGwsICJwZXJtYWxpbmsiOiAiL3IvRW50cmVwcmVuZXVyL2NvbW1lbnRzLzFrbmlmYngvaV93YXNfaW5famFpbF8zX3llYXJzX2Fnb19ub3dfaV9zZWxsX2NoYXBhdGlmbGF0LyIsICJzdGlja2llZCI6IGZhbHNlLCAidXJsIjogImh0dHBzOi8vd3d3LnJlZGRpdC5jb20vci9FbnRyZXByZW5ldXIvY29tbWVudHMvMWtuaWZieC9pX3dhc19pbl9qYWlsXzNfeWVhcnNfYWdvX25vd19pX3NlbGxfY2hhcGF0aWZsYXQvIiwgInN1YnJlZGRpdF9zdWJzY3JpYmVycyI6IDQ3MjI3NDMsICJjcmVhdGVkX3V0YyI6IDE3NDczNDA3NzUuMCwgIm51bV9jcm9zc3Bvc3RzIjogMCwgIm1lZGlhIjogbnVsbCwgImlzX3ZpZGVvIjogZmFsc2V9fSwgeyJraW5kIjogInQzIiwgImRhdGEiOiB7ImFwcHJvdmVkX2F0X3V0YyI6IG51bGwsICJzdWJyZWRkaXQiOiAiRW50cmVwcmVuZXVyIiwgInNlbGZ0ZXh0IjogIkRvZXMgYW55b25lIGtub3cgaG93IHRvIHN0YXJ0IGEgZGF0YSBjZW50ZXIgYnVzaW5lc3M/IEhvdyBtdWNoIGludmVzdG1lbnQgaXMgcmVxdWlyZWQ/IFdoYXQgY29tcGxpYW5jZXMgbmVlZCB0byBiZSBmb2xsb3dlZD8gSG93IHRvIGZpbmQgY2xpZW50cz8gSG93IHRvIHNjYWxlPyBXaGF0IG5lY2Vzc2FyeSB0aGluZ3Mgc2hvdWxkIGJlIGRvbmU/IFdvcmRzIG9mIGNhdXRpb24/XG5cbkFuZCBhbGwgb3RoZXIgcmVsYXRlZCBxdWVzdGlvbnM/XG5cblBsZWFzZSBzaGFyZSBpZiBhbnlvbmUga25vd3MgYWJvdXQgaXQgb3IgcHJvdmlkZSBhIHNvdXJjZSBmb3Igc3VjaCBpbmZvcm1hdGlvbi4gVGhhbmtzIGluIGFkdmFuY2UhIiwgImF1dGhvcl9mdWxsbmFtZSI6ICJ0Ml85dzBhY3QzZyIsICJzYXZlZCI6IGZhbHNlLCAibW9kX3JlYXNvbl90aXRsZSI6IG51bGwsICJnaWxkZWQiOiAwLCAiY2xpY2tlZCI6IGZhbHNlLCAidGl0bGUiOiAiVGFsayBhYm91dCBEYXRhIENlbnRlcnMgQnVzaW5lc3MiLCAibGlua19mbGFpcl9yaWNodGV4dCI6IFt7ImUiOiAidGV4dCIsICJ0IjogIkhvdyBEbyBJPyJ9XSwgInN1YnJlZGRpdF9uYW1lX3ByZWZpeGVkIjogInIvRW50cmVwcmVuZXVyIiwgImhpZGRlbiI6IGZhbHNlLCAicHdscyI6IDYsICJsaW5rX2ZsYWlyX2Nzc19jbGFzcyI6ICJibGFja253aGl0ZXNtYWxsIiwgImRvd25zIjogMCwgInRvcF9hd2FyZGVkX3R5cGUiOiBudWxsLCAiaGlkZV9zY29yZSI6IGZhbHNlLCAibmFtZSI6ICJ0M18xa29reXp1IiwgInF1YXJhbnRpbmUiOiBmYWxzZSwgImxpbmtfZmxhaXJfdGV4dF9jb2xvciI6ICJkYXJrIiwgInVwdm90ZV9yYXRpbyI6IDEuMCwgImF1dGhvcl9mbGFpcl9iYWNrZ3JvdW5kX2NvbG9yIjogbnVsbCwgInN1YnJlZGRpdF90eXBlIjogInB1YmxpYyIsICJ1cHMiOiAyLCAidG90YWxfYXdhcmRzX3JlY2VpdmVkIjogMCwgIm1lZGlhX2VtYmVkIjoge30sICJhdXRob3JfZmxhaXJfdGVtcGxhdGVfaWQiOiBudWxsLCAiaXNfb3JpZ2luYWxfY29udGVudCI6IGZhbHNlLCAidXNlcl9yZXBvcnRzIjogW10sICJzZWN1cmVfbWVkaWEiOiBudWxsLCAiaXNfcmVkZGl0X21lZGlhX2RvbWFpbiI6IGZhbHNlLCAiaXNfbWV0YSI6IGZhbHNlLCAiY2F0ZWdvcnkiOiBudWxsLCAic2VjdXJlX21lZGlhX2VtYmVkIjoge30sICJsaW5rX2ZsYWlyX3RleHQiOiAiSG93IERvIEk/IiwgImNhbl9tb2RfcG9zdCI6IGZhbHNlLCAic2NvcmUiOiAyLCAiYXBwcm92ZWRfYnkiOiBudWxsLCAiaXNfY3JlYXRlZF9mcm9tX2Fkc191aSI6IGZhbHNlLCAiYXV0aG9yX3ByZW1pdW0iOiBmYWxzZSwgInRodW1ibmFpbCI6ICIiLCAiZWRpdGVkIjogZmFsc2UsICJhdXRob3JfZmxhaXJfY3NzX2NsYXNzIjogbnVsbCwgImF1dGhvcl9mbGFpcl9yaWNodGV4dCI6IFtdLCAiZ2lsZGluZ3MiOiB7fSwgImNvbnRlbnRfY2F0ZWdvcmllcyI6IG51bGwsICJpc19zZWxmIjogdHJ1ZSwgIm1vZF9ub3RlIjogbnVsbCwgImNyZWF0ZWQiOiAxNzQ3NDU3NzM4LjAsICJsaW5rX2ZsYWlyX3R5cGUiOiAicmljaHRleHQiLCAid2xzIjogNiwgInJlbW92ZWRfYnlfY2F0ZWdvcnkiOiBudWxsLCAiYmFubmVkX2J5IjogbnVsbCwgImF1dGhvcl9mbGFpcl90eXBlIjogInRleHQiLCAiZG9tYWluIjogInNlbGYuRW50cmVwcmVuZXVyIiwgImFsbG93X2xpdmVfY29tbWVudHMiOiBmYWxzZSwgInNlbGZ0ZXh0X2h0bWwiOiAiJmx0OyEtLSBTQ19PRkYgLS0mZ3Q7Jmx0O2RpdiBjbGFzcz1cIm1kXCImZ3Q7Jmx0O3AmZ3Q7RG9lcyBhbnlvbmUga25vdyBob3cgdG8gc3RhcnQgYSBkYXRhIGNlbnRlciBidXNpbmVzcz8gSG93IG11Y2ggaW52ZXN0bWVudCBpcyByZXF1aXJlZD8gV2hhdCBjb21wbGlhbmNlcyBuZWVkIHRvIGJlIGZvbGxvd2VkPyBIb3cgdG8gZmluZCBjbGllbnRzPyBIb3cgdG8gc2NhbGU/IFdoYXQgbmVjZXNzYXJ5IHRoaW5ncyBzaG91bGQgYmUgZG9uZT8gV29yZHMgb2YgY2F1dGlvbj8mbHQ7L3AmZ3Q7XG5cbiZsdDtwJmd0O0FuZCBhbGwgb3RoZXIgcmVsYXRlZCBxdWVzdGlvbnM/Jmx0Oy9wJmd0O1xuXG4mbHQ7cCZndDtQbGVhc2Ugc2hhcmUgaWYgYW55b25lIGtub3dzIGFib3V0IGl0IG9yIHByb3ZpZGUgYSBzb3VyY2UgZm9yIHN1Y2ggaW5mb3JtYXRpb24uIFRoYW5rcyBpbiBhZHZhbmNlISZsdDsvcCZndDtcbiZsdDsvZGl2Jmd0OyZsdDshLS0gU0NfT04gLS0mZ3Q7IiwgImxpa2VzIjogbnVsbCwgInN1Z2dlc3RlZF9zb3J0IjogImNvbmZpZGVuY2UiLCAiYmFubmVkX2F0X3V0YyI6IG51bGwsICJ2aWV3X2NvdW50IjogbnVsbCwgImFyY2hpdmVkIjogZmFsc2UsICJub19mb2xsb3ciOiBmYWxzZSwgImlzX2Nyb3NzcG9zdGFibGUiOiBmYWxzZSwgInBpbm5lZCI6IGZhbHNlLCAib3Zlcl8xOCI6IGZhbHNlLCAiYWxsX2F3YXJkaW5ncyI6IFtdLCAiYXdhcmRlcnMiOiBbXSwgIm1lZGlhX29ubHkiOiBmYWxzZSwgImxpbmtfZmxhaXJfdGVtcGxhdGVfaWQiOiAiY2NiMDQ3M2MtZTFjZS0xMWUzLWEyNmYtMTIzMTNkMDUxYWIwIiwgImNhbl9naWxkIjogZmFsc2UsICJzcG9pbGVyIjogZmFsc2UsICJsb2NrZWQiOiBmYWxzZSwgImF1dGhvcl9mbGFpcl90ZXh0IjogbnVsbCwgInRyZWF0bWVudF90YWdzIjogW10sICJ2aXNpdGVkIjogZmFsc2UsICJyZW1vdmVkX2J5IjogbnVsbCwgIm51bV9yZXBvcnRzIjogbnVsbCwgImRpc3Rpbmd1aXNoZWQiOiBudWxsLCAic3VicmVkZGl0X2lkIjogInQ1XzJxbGRvIiwgImF1dGhvcl9pc19ibG9ja2VkIjogZmFsc2UsICJtb2RfcmVhc29uX2J5IjogbnVsbCwgInJlbW92YWxfcmVhc29uIjogbnVsbCwgImxpbmtfZmxhaXJfYmFja2dyb3VuZF9jb2xvciI6ICIjNDZkMTYwIiwgImlkIjogIjFrb2t5enUiLCAiaXNfcm9ib3RfaW5kZXhhYmxlIjogdHJ1ZSwgInJlcG9ydF9yZWFzb25zIjogbnVsbCwgImF1dGhvciI6ICJKQmhhaTIwMDMiLCAiZGlzY3Vzc2lvbl90eXBlIjogbnVsbCwgIm51bV9jb21tZW50cyI6IDIsICJzZW5kX3JlcGxpZXMiOiB0cnVlLCAiY29udGVzdF9tb2RlIjogZmFsc2UsICJtb2RfcmVwb3J0cyI6IFtdLCAiYXV0aG9yX3BhdHJlb25fZmxhaXIiOiBmYWxzZSwgImF1dGhvcl9mbGFpcl90ZXh0X2NvbG9yIjogbnVsbCwgInBlcm1hbGluayI6ICIvci9FbnRyZXByZW5ldXIvY29tbWVudHMvMWtva3l6dS90YWxrX2Fib3V0X2RhdGFfY2VudGVyc19idXNpbmVzcy8iLCAic3RpY2tpZWQiOiBmYWxzZSwgInVybCI6ICJodHRwczovL3d3dy5yZWRkaXQuY29tL3IvRW50cmVwcmVuZXVyL2NvbW1lbnRzLzFrb2t5enUvdGFsa19hYm91dF9kYXRhX2NlbnRlcnNfYnVzaW5lc3MvIiwgInN1YnJlZGRpdF9zdWJzY3JpYmVycyI6IDQ3MjI3NDMsICJjcmVhdGVkX3V0YyI6IDE3NDc0NTc3MzguMCwgIm51bV9jcm9zc3Bvc3RzIjogMCwgIm1lZGlhIjogbnVsbCwgImlzX3ZpZGVvIjogZmFsc2V9fSwgeyJraW5kIjogInQzIiwgImRhdGEiOiB7ImFwcHJvdmVkX2F0X3V0YyI6IG51bGwsICJzdWJyZWRkaXQiOiAiRW50cmVwcmVuZXVyIiwgInNlbGZ0ZXh0IjogIklcdTIwMTl2ZSBiZWVuIHJlc2VhcmNoaW5nIHRoZSBmb29kIHdob2xlc2FsZSBzcGFjZSBhbmQgbm90aWNlZCB0aGF0IGEgbG90IG9mIHdob2xlc2FsZXJzIChlc3BlY2lhbGx5IHRob3NlIGRlYWxpbmcgd2l0aCBpbnRlcm5hdGlvbmFsIHByb2R1Y3RzKSBzZWVtIHRvIGFjdCBhcyB0aGVpciBvd24gaW1wb3J0ZXJzLiBJIGluaXRpYWxseSB0aG91Z2h0IHdob2xlc2FsZSB3b3VsZCBiZSB0aGUgbmF0dXJhbCBmaXJzdCBzdGVwIHRvIHNlbGwgYXMgYW4gaW1wb3J0ZXIsIGJ1dCBub3cgaXQgbG9va3MgbGlrZSBtYW55IG9mIHRoZW0gYWxyZWFkeSBoYW5kbGUgc291cmNpbmcgYW5kIGxvZ2lzdGljcyBvbiB0aGVpciBvd24uXG5cblNvIHdoZXJlIGNhbiBpbXBvcnRlcnMgYWN0dWFsbHkgc2VsbCB0aGVpciBwcm9kdWN0cz8gQXJlIHRoZXJlIHNwZWNpZmljIHBsYXRmb3JtcyBvciB0eXBlcyBvZiBidXllcnMgKGxpa2UgZGlzdHJpYnV0b3JzIG9yIGZvb2Qgc2VydmljZSBjb21wYW5pZXMpIHRoYXQgc3RpbGwgcmVseSBvbiBpbXBvcnRlcnMgcmF0aGVyIHRoYW4gbWFuYWdpbmcgdGhlIHByb2Nlc3MgdGhlbXNlbHZlcz8iLCAiYXV0aG9yX2Z1bGxuYW1lIjogInQyX2ZzajZweGt5IiwgInNhdmVkIjogZmFsc2UsICJtb2RfcmVhc29uX3RpdGxlIjogbnVsbCwgImdpbGRlZCI6IDAsICJjbGlja2VkIjogZmFsc2UsICJ0aXRsZSI6ICJXaGVyZSBDYW4gWW91IFNlbGwgRm9vZCBQcm9kdWN0cyBpbiBCdWxrIGFzIGEgTWljcm8tSW1wb3J0ZXI/IiwgImxpbmtfZmxhaXJfcmljaHRleHQiOiBbeyJlIjogInRleHQiLCAidCI6ICJIb3cgRG8gST8ifV0sICJzdWJyZWRkaXRfbmFtZV9wcmVmaXhlZCI6ICJyL0VudHJlcHJlbmV1ciIsICJoaWRkZW4iOiBmYWxzZSwgInB3bHMiOiA2LCAibGlua19mbGFpcl9jc3NfY2xhc3MiOiAiYmxhY2tud2hpdGVzbWFsbCIsICJkb3ducyI6IDAsICJ0b3BfYXdhcmRlZF90eXBlIjogbnVsbCwgImhpZGVfc2NvcmUiOiBmYWxzZSwgIm5hbWUiOiAidDNfMWtvam5xeCIsICJxdWFyYW50aW5lIjogZmFsc2UsICJsaW5rX2ZsYWlyX3RleHRfY29sb3IiOiAiZGFyayIsICJ1cHZvdGVfcmF0aW8iOiAxLjAsICJhdXRob3JfZmxhaXJfYmFja2dyb3VuZF9jb2xvciI6IG51bGwsICJzdWJyZWRkaXRfdHlwZSI6ICJwdWJsaWMiLCAidXBzIjogMiwgInRvdGFsX2F3YXJkc19yZWNlaXZlZCI6IDAsICJtZWRpYV9lbWJlZCI6IHt9LCAiYXV0aG9yX2ZsYWlyX3RlbXBsYXRlX2lkIjogbnVsbCwgImlzX29yaWdpbmFsX2NvbnRlbnQiOiBmYWxzZSwgInVzZXJfcmVwb3J0cyI6IFtdLCAic2VjdXJlX21lZGlhIjogbnVsbCwgImlzX3JlZGRpdF9tZWRpYV9kb21haW4iOiBmYWxzZSwgImlzX21ldGEiOiBmYWxzZSwgImNhdGVnb3J5IjogbnVsbCwgInNlY3VyZV9tZWRpYV9lbWJlZCI6IHt9LCAibGlua19mbGFpcl90ZXh0IjogIkhvdyBEbyBJPyIsICJjYW5fbW9kX3Bvc3QiOiBmYWxzZSwgInNjb3JlIjogMiwgImFwcHJvdmVkX2J5IjogbnVsbCwgImlzX2NyZWF0ZWRfZnJvbV9hZHNfdWkiOiBmYWxzZSwgImF1dGhvcl9wcmVtaXVtIjogZmFsc2UsICJ0aHVtYm5haWwiOiAiIiwgImVkaXRlZCI6IGZhbHNlLCAiYXV0aG9yX2ZsYWlyX2Nzc19jbGFzcyI6IG51bGwsICJhdXRob3JfZmxhaXJfcmljaHRleHQiOiBbXSwgImdpbGRpbmdzIjoge30sICJjb250ZW50X2NhdGVnb3JpZXMiOiBudWxsLCAiaXNfc2VsZiI6IHRydWUsICJtb2Rfbm90ZSI6IG51bGwsICJjcmVhdGVkIjogMTc0NzQ1MzA5My4wLCAibGlua19mbGFpcl90eXBlIjogInJpY2h0ZXh0IiwgIndscyI6IDYsICJyZW1vdmVkX2J5X2NhdGVnb3J5IjogbnVsbCwgImJhbm5lZF9ieSI6IG51bGwsICJhdXRob3JfZmxhaXJfdHlwZSI6ICJ0ZXh0IiwgImRvbWFpbiI6ICJzZWxmLkVudHJlcHJlbmV1ciIsICJhbGxvd19saXZlX2NvbW1lbnRzIjogZmFsc2UsICJzZWxmdGV4dF9odG1sIjogIiZsdDshLS0gU0NfT0ZGIC0tJmd0OyZsdDtkaXYgY2xhc3M9XCJtZFwiJmd0OyZsdDtwJmd0O0lcdTIwMTl2ZSBiZWVuIHJlc2VhcmNoaW5nIHRoZSBmb29kIHdob2xlc2FsZSBzcGFjZSBhbmQgbm90aWNlZCB0aGF0IGEgbG90IG9mIHdob2xlc2FsZXJzIChlc3BlY2lhbGx5IHRob3NlIGRlYWxpbmcgd2l0aCBpbnRlcm5hdGlvbmFsIHByb2R1Y3RzKSBzZWVtIHRvIGFjdCBhcyB0aGVpciBvd24gaW1wb3J0ZXJzLiBJIGluaXRpYWxseSB0aG91Z2h0IHdob2xlc2FsZSB3b3VsZCBiZSB0aGUgbmF0dXJhbCBmaXJzdCBzdGVwIHRvIHNlbGwgYXMgYW4gaW1wb3J0ZXIsIGJ1dCBub3cgaXQgbG9va3MgbGlrZSBtYW55IG9mIHRoZW0gYWxyZWFkeSBoYW5kbGUgc291cmNpbmcgYW5kIGxvZ2lzdGljcyBvbiB0aGVpciBvd24uJmx0Oy9wJmd0O1xuXG4mbHQ7cCZndDtTbyB3aGVyZSBjYW4gaW1wb3J0ZXJzIGFjdHVhbGx5IHNlbGwgdGhlaXIgcHJvZHVjdHM/IEFyZSB0aGVyZSBzcGVjaWZpYyBwbGF0Zm9ybXMgb3IgdHlwZXMgb2YgYnV5ZXJzIChsaWtlIGRpc3RyaWJ1dG9ycyBvciBmb29kIHNlcnZpY2UgY29tcGFuaWVzKSB0aGF0IHN0aWxsIHJlbHkgb24gaW1wb3J0ZXJzIHJhdGhlciB0aGFuIG1hbmFnaW5nIHRoZSBwcm9jZXNzIHRoZW1zZWx2ZXM/Jmx0Oy9wJmd0O1xuJmx0Oy9kaXYmZ3Q7Jmx0OyEtLSBTQ19PTiAtLSZndDsiLCAibGlrZXMiOiBudWxsLCAic3VnZ2VzdGVkX3NvcnQiOiAiY29uZmlkZW5jZSIsICJiYW5uZWRfYXRfdXRjIjogbnVsbCwgInZpZXdfY291bnQiOiBudWxsLCAiYXJjaGl2ZWQiOiBmYWxzZSwgIm5vX2ZvbGxvdyI6IGZhbHNlLCAiaXNfY3Jvc3Nwb3N0YWJsZSI6IGZhbHNlLCAicGlubmVkIjogZmFsc2UsICJvdmVyXzE4IjogZmFsc2UsICJhbGxfYXdhcmRpbmdzIjogW10sICJhd2FyZGVycyI6IFtdLCAibWVkaWFfb25seSI6IGZhbHNlLCAibGlua19mbGFpcl90ZW1wbGF0ZV9pZCI6ICJjY2IwNDczYy1lMWNlLTExZTMtYTI2Zi0xMjMxM2QwNTFhYjAiLCAiY2FuX2dpbGQiOiBmYWxzZSwgInNwb2lsZXIiOiBmYWxzZSwgImxvY2tlZCI6IGZhbHNlLCAiYXV0aG9yX2ZsYWlyX3RleHQiOiBudWxsLCAidHJlYXRtZW50X3RhZ3MiOiBbXSwgInZpc2l0ZWQiOiBmYWxzZSwgInJlbW92ZWRfYnkiOiBudWxsLCAibnVtX3JlcG9ydHMiOiBudWxsLCAiZGlzdGluZ3Vpc2hlZCI6IG51bGwsICJzdWJyZWRkaXRfaWQiOiAidDVfMnFsZG8iLCAiYXV0aG9yX2lzX2Jsb2NrZWQiOiBmYWxzZSwgIm1vZF9yZWFzb25fYnkiOiBudWxsLCAicmVtb3ZhbF9yZWFzb24iOiBudWxsLCAibGlua19mbGFpcl9iYWNrZ3JvdW5kX2NvbG9yIjogIiM0NmQxNjAiLCAiaWQiOiAiMWtvam5xeCIsICJpc19yb2JvdF9pbmRleGFibGUiOiB0cnVlLCAicmVwb3J0X3JlYXNvbnMiOiBudWxsLCAiYXV0aG9yIjogIk9rLU1lbW9yeTI4MDkiLCAiZGlzY3Vzc2lvbl90eXBlIjogbnVsbCwgIm51bV9jb21tZW50cyI6IDMsICJzZW5kX3JlcGxpZXMiOiB0cnVlLCAiY29udGVzdF9tb2RlIjogZmFsc2UsICJtb2RfcmVwb3J0cyI6IFtdLCAiYXV0aG9yX3BhdHJlb25fZmxhaXIiOiBmYWxzZSwgImF1dGhvcl9mbGFpcl90ZXh0X2NvbG9yIjogbnVsbCwgInBlcm1hbGluayI6ICIvci9FbnRyZXByZW5ldXIvY29tbWVudHMvMWtvam5xeC93aGVyZV9jYW5feW91X3NlbGxfZm9vZF9wcm9kdWN0c19pbl9idWxrX2FzX2EvIiwgInN0aWNraWVkIjogZmFsc2UsICJ1cmwiOiAiaHR0cHM6Ly93d3cucmVkZGl0LmNvbS9yL0VudHJlcHJlbmV1ci9jb21tZW50cy8xa29qbnF4L3doZXJlX2Nhbl95b3Vfc2VsbF9mb29kX3Byb2R1Y3RzX2luX2J1bGtfYXNfYS8iLCAic3VicmVkZGl0X3N1YnNjcmliZXJzIjogNDcyMjc0MywgImNyZWF0ZWRfdXRjIjogMTc0NzQ1MzA5My4wLCAibnVtX2Nyb3NzcG9zdHMiOiAwLCAibWVkaWEiOiBudWxsLCAiaXNfdmlkZW8iOiBmYWxzZX19XSwgImJlZm9yZSI6IG51bGx9fQ==","status":200,"url":"https://www.reddit.com/r/Entrepreneur/hot.json?limit=5"},"revalidate":31536000,"tags":[]}